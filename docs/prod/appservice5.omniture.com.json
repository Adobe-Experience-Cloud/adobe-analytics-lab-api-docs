{
  "swagger" : "2.0",
    "info": {
    "description": "A collection of RESTful APIs to provide access to Adobe Analytics features and data.",
    "version": "1.0.0",
    "title": "Analytics Services",
    "termsOfService": "http://www.adobe.com/legal/terms.html"
  },
  "host": "appservice5.omniture.com",
  "basePath": "/analytics/1.0",
  "tags" : [ {
    "name" : "calculatedmetrics"
  }, {
    "name" : "companies",
    "description" : "Analytics Company Service"
  }, {
    "name" : "dimensions",
    "description" : "Dimensions service"
  }, {
    "name" : "favorites",
    "description" : "Operations on managing favorites on components"
  }, {
    "name" : "metrics",
    "description" : "Retrieves a List of Metrics for the Given Report Suite"
  }, {
    "name" : "reports",
    "description" : "Ranked reports service"
  }, {
    "name" : "reportsuites",
    "description" : "Analytics Report Suite Service"
  }, {
    "name" : "segments",
    "description" : "Operations on segments"
  }, {
    "name" : "tags",
    "description" : "Operations on tags"
  } ],
  "schemes" : [ "https" ],
  "paths" : {
    "/calculatedmetrics" : {
      "get" : {
        "tags" : [ "calculatedmetrics" ],
        "summary" : "Retrieve many calculated metrics",
        "description" : "A calculated metric response will always include these default items: *id, name, description, rsid, owner* \n\nOther attributes can be optionally requested through the 'expansion' field:\n\n* *modified*: Date that the metric was last modified (ISO 8601)\n* *definition*: Calculated metric definition as JSON object\n* *compatibility*: Products that the metric is compatible with\n* *reportSuiteName*: Also return the friendly Report Suite name for the RSID\n* *favorite*: True if calculated metric has been marked as a 'Favorite'\n* *tags*: Gives all existing tags associated with the calculated metric\n* *approved*: True if calculated metric has been marked as 'Approved'\n* *shares*: Gives all existing shares for the calculated metric\n* *sharesFullName*: Give 'shares', but also include the shared-to user's friendly login name as 'shareToDisplayName' in each share object\n* *ownerFullName*: Add friendly full login name (string) to the 'owner' object\n\n",
        "operationId" : "findCalculatedMetrics",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "expansion",
          "in" : "query",
          "description" : "Comma-delimited list of additional calculated metric metadata fields to include on response.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "reportSuiteName", "siteTitle", "ownerFullName", "modified", "migratedIds", "isDeleted", "approved", "favorite", "shares", "tags", "sharesFullName", "usageSummary", "usageSummaryWithRelevancyScore", "definition", "authorization", "compatibility", "legacyId", "internal", "dataGroup", "reportTimeAttribution" ]
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "rsids",
          "in" : "query",
          "description" : "Filter list to only include calculated metrics tied to specified RSID list (comma-delimited)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ownerId",
          "in" : "query",
          "description" : "Filter list to only include calculated metrics owned by the specified loginId",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "calculatedMetricFilter",
          "in" : "query",
          "description" : "Filter list to only include calculated metrics in the specified list (comma-delimited list of IDs)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "filterByIds",
          "in" : "query",
          "description" : "Filter list to only include calculated metrics in the specified list (comma-delimited list of IDs) (this is the same as calculatedMetricFilter, and is overwritten by calculatedMetricFilter",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "Locale",
          "required" : false,
          "type" : "string",
          "default" : "en_US"
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "Filter list to only include calculated metrics that contains the Name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "tagNames",
          "in" : "query",
          "description" : "Filter list to only include calculated metrics that contains one of the tags",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "favorite",
          "in" : "query",
          "description" : "Filter list to only include calculated metrics that are favorites",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "approved",
          "in" : "query",
          "description" : "Filter list to only include calculated metrics that are approved",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "pagination",
          "in" : "query",
          "description" : "return paginated results",
          "required" : false,
          "type" : "string",
          "default" : "false",
          "enum" : [ "true", "false" ]
        }, {
          "name" : "filterByModifiedAfter",
          "in" : "query",
          "description" : "Filter list to only include calculated metrics modified since this date (ISO8601 format)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of results per page",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page number (base 0 - first page is \"0\")",
          "required" : false,
          "type" : "integer",
          "default" : 0
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/AnalyticsCalculatedMetric"
              }
            }
          },
          "400" : {
            "description" : "Unable to retrieve list of calculated metrics shared with user",
            "schema" : {
              "$ref" : "#/definitions/CalculatedMetricErrorStatus"
            }
          },
          "401" : {
            "description" : "Owner filter error; user specified is not in the same company as the requesting user",
            "schema" : {
              "$ref" : "#/definitions/CalculatedMetricErrorStatus"
            }
          },
          "403" : {
            "description" : "Requesting non-shared calculated metrics for other users is restricted to admin users",
            "schema" : {
              "$ref" : "#/definitions/CalculatedMetricErrorStatus"
            }
          },
          "500" : {
            "description" : "External API error; Calculated metric retrieval failed",
            "schema" : {
              "$ref" : "#/definitions/CalculatedMetricErrorStatus"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "calculatedmetrics" ],
        "summary" : "Create a new Calculated Metric",
        "description" : "Creates a new calculated metric. The following attributes are available when creating a calculated metric:\n\nIMPORTANT: Required Fields: name, definition, rsid\n\nOptional fields: description\n\nExample definition for use in testing API below (\"Page exists\"):\n\n```json\n\n{\"definition\":{},\"version\":[1,0,0]}\n```\n\nA calculated metric response will always include these default items:* id, name, description, rsid, owner* \n\nOther attributes can be optionally requested through the 'expansion' field as defined/documented in the GET endpoints (see GET \"/calculatedmetrics\" or GET \"/calculatedmetrics/{id}\" for more documentation).",
        "operationId" : "calculatedmetrics_createCalculatedMetric",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "expansion",
          "in" : "query",
          "description" : "Comma-delimited list of additional calculated metric metadata fields to include on response.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "reportSuiteName", "siteTitle", "ownerFullName", "modified", "migratedIds", "isDeleted", "approved", "favorite", "shares", "tags", "sharesFullName", "usageSummary", "usageSummaryWithRelevancyScore", "definition", "authorization", "compatibility", "legacyId", "internal", "dataGroup", "reportTimeAttribution" ]
          },
          "collectionFormat" : "multi"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "JSON-formatted Object containing key/value pairs for calculated metric creation.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AnalyticsCalculatedMetric"
          }
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "Locale",
          "required" : false,
          "type" : "string",
          "default" : "en_US"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AnalyticsCalculatedMetric"
            }
          },
          "400" : {
            "description" : "Invalid input; name, rsid, and definition are all required. Definition must be formatted as a JSON Object.",
            "schema" : {
              "$ref" : "#/definitions/CalculatedMetricErrorStatus"
            }
          },
          "500" : {
            "description" : "External API error; Calculated metric create or retrieval failed",
            "schema" : {
              "$ref" : "#/definitions/CalculatedMetricErrorStatus"
            }
          }
        }
      }
    },
    "/calculatedmetrics/{id}" : {
      "get" : {
        "tags" : [ "calculatedmetrics" ],
        "summary" : "Retrieve a single calculated metric by id",
        "description" : "A calculated metric response will always include these default items: *id, name, description, rsid, owner* \n\nOther attributes can be optionally requested through the 'expansion' field:\n\n* *modified*: Date that the metric was last modified (ISO 8601)\n* *definition*: Calculated metric definition as JSON object\n* *compatibility*: Products that the metric is compatible with\n* *reportSuiteName*: Also return the friendly Report Suite name for the RSID\n* *favorite*: True if calculated metric has been marked as a 'Favorite'\n* *tags*: Gives all existing tags associated with the calculated metric\n* *approved*: True if calculated metric has been marked as 'Approved'\n* *shares*: Gives all existing shares for the calculated metric\n* *sharesFullName*: Give 'shares', but also include the shared-to user's friendly login name as 'shareToDisplayName' in each share object\n* *ownerFullName*: Add friendly full login name (string) to the 'owner' object\n\n",
        "operationId" : "findOneCalculatedMetric",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The calculated metric ID to retrieve",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "expansion",
          "in" : "query",
          "description" : "Comma-delimited list of additional calculated metric metadata fields to include on response.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "reportSuiteName", "siteTitle", "ownerFullName", "modified", "migratedIds", "isDeleted", "approved", "favorite", "shares", "tags", "sharesFullName", "usageSummary", "usageSummaryWithRelevancyScore", "definition", "authorization", "compatibility", "legacyId", "internal", "dataGroup", "reportTimeAttribution" ]
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "Locale",
          "required" : false,
          "type" : "string",
          "default" : "en_US"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AnalyticsCalculatedMetric"
            }
          },
          "403" : {
            "description" : "Requesting non-shared calculated metrics for other users is restricted to admin users",
            "schema" : {
              "$ref" : "#/definitions/CalculatedMetricErrorStatus"
            }
          },
          "500" : {
            "description" : "External API error; calculated metric retrieval failed",
            "schema" : {
              "$ref" : "#/definitions/CalculatedMetricErrorStatus"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "calculatedmetrics" ],
        "summary" : "Update an existing calculated metric",
        "description" : "The following fields can be modified through this endpoint: <br><b>name, description, definition, owner, rsid</b>Example \"defintion\" for use in testing API below (\"Page exists\"):<br>\"definition\":{},\"version\":[1,0,0]}<br><br>Response will be the newly modified calculated metric object after the update request completes.<br><br><b><span style=\"text-decoration: underline;\">CalculatedMetricResponse</span></b><br>A calculated metric response will always include these default items:* id, name, description, rsid, owner* \n\nOther attributes can be optionally requested through the 'expansion' field as defined/documented in the GET endpoints (see GET \"/calculatedmetrics\" or GET \"/calculatedmetrics/{id}\" for more documentation).",
        "operationId" : "updateCalculatedMetric",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "expansion",
          "in" : "query",
          "description" : "Comma-delimited list of additional calculated metric metadata fields to include on response.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "reportSuiteName", "siteTitle", "ownerFullName", "modified", "migratedIds", "isDeleted", "approved", "favorite", "shares", "tags", "sharesFullName", "usageSummary", "usageSummaryWithRelevancyScore", "definition", "authorization", "compatibility", "legacyId", "internal", "dataGroup", "reportTimeAttribution" ]
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Calculated Metric ID to be updated",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "JSON-formatted Object containing key/value pairs to be updated.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AnalyticsCalculatedMetric"
          }
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "Locale",
          "required" : false,
          "type" : "string",
          "default" : "en_US"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AnalyticsCalculatedMetric"
            }
          },
          "400" : {
            "description" : "Definition must be formatted as a JSON Object",
            "schema" : {
              "$ref" : "#/definitions/CalculatedMetricErrorStatus"
            }
          },
          "401" : {
            "description" : "Company mismatch; calculated metric ownership can only be transferred within the same organization",
            "schema" : {
              "$ref" : "#/definitions/CalculatedMetricErrorStatus"
            }
          },
          "403" : {
            "description" : "User does not have permission to update this calculated metric",
            "schema" : {
              "$ref" : "#/definitions/CalculatedMetricErrorStatus"
            }
          },
          "500" : {
            "description" : "External API error; Calculated metric update or retrieval failed",
            "schema" : {
              "$ref" : "#/definitions/CalculatedMetricErrorStatus"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "calculatedmetrics" ],
        "summary" : "Deletion of Calculated Metrics by Id",
        "description" : "",
        "operationId" : "deleteCalculatedMetric",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The calculated metric ID to be deleted",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "Locale",
          "required" : false,
          "type" : "string",
          "default" : "en_US"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DeleteResponse"
            }
          },
          "500" : {
            "description" : "External API error; Calculated metric delete failed",
            "schema" : {
              "$ref" : "#/definitions/CalculatedMetricErrorStatus"
            }
          }
        }
      }
    },
    "/dimensions" : {
      "get" : {
        "tags" : [ "dimensions" ],
        "summary" : "Returns a list of dimensions for a given report suite.",
        "description" : "",
        "operationId" : "dimensions_getDimensions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rsid",
          "in" : "query",
          "description" : "A Report Suite ID",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "Locale",
          "required" : false,
          "type" : "string",
          "default" : "en_US"
        }, {
          "name" : "support",
          "in" : "query",
          "description" : "Comma-delimited list of products to filter the dimension list by. Possible values are 'oberon' and 'dataWarehouse'.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "oberon", "dataWarehouse" ]
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "segmentable",
          "in" : "query",
          "description" : "Only include dimensions that are valid within a segment.",
          "required" : false,
          "type" : "boolean",
          "enum" : [ "true" ]
        }, {
          "name" : "supportsDataGovernance",
          "in" : "query",
          "description" : "Only include dimensions that contain dataGovernance attribute.",
          "required" : false,
          "type" : "boolean",
          "enum" : [ "true" ]
        }, {
          "name" : "reportable",
          "in" : "query",
          "description" : "Only include dimensions that are valid within a report.",
          "required" : false,
          "type" : "boolean",
          "enum" : [ "true" ]
        }, {
          "name" : "classifiable",
          "in" : "query",
          "description" : "Only include classifiable dimensions.",
          "required" : false,
          "type" : "boolean",
          "enum" : [ "true" ]
        }, {
          "name" : "reportTimeAttribution",
          "in" : "query",
          "description" : "Only include dimensions that support reportTimeAttribution.",
          "required" : false,
          "type" : "boolean",
          "enum" : [ "true" ]
        }, {
          "name" : "useCache",
          "in" : "query",
          "description" : "Enable caching for faster requests.",
          "required" : false,
          "type" : "boolean",
          "default" : true
        }, {
          "name" : "expansion",
          "in" : "query",
          "description" : "Add extra metadata to items (comma-delimited list)",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "tags", "approved", "favorite", "usageSummary", "usageSummaryWithRelevancyScore", "hidden", "noAccess", "warning", "curatedItems", "isEntryOrExit", "reportTimeAttribution", "customerJourney", "dataGovernance", "aliasId", "dataCollectionType", "attributionModel" ]
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "dataGovernanceLabels",
          "in" : "query",
          "description" : "Filter the response based on data governance labels. Search for multiple lables using a comma-delimited string format. Any metric/dimension containing one or more of the provided labels will be returned.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "dataGovernanceNamespaces",
          "in" : "query",
          "description" : "Filter the response based on data governance namespaces. Search for multiple namespaces using a comma-delimited string format. Any dimension containing one or more of the provided namespaces will be returned.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/AnalyticsDimension"
              }
            }
          },
          "400" : {
            "description" : "Invalid JSON input"
          },
          "401" : {
            "description" : "User does not have access to this report suite"
          },
          "500" : {
            "description" : "Unexpected internal server error"
          }
        }
      }
    },
    "/dimensions/{dimensionId}" : {
      "get" : {
        "tags" : [ "dimensions" ],
        "summary" : "Returns a dimension for the given report suite",
        "description" : "",
        "operationId" : "dimensions_getDimension",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "dimensionId",
          "in" : "path",
          "description" : "The dimension ID. For example a valid id is a value like 'evar1'",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "rsid",
          "in" : "query",
          "description" : "The report suite ID.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "The locale to use for returning system named dimensions.",
          "required" : false,
          "type" : "string",
          "default" : "en_US"
        }, {
          "name" : "expansion",
          "in" : "query",
          "description" : "Add extra metadata to items (comma-delimited list)",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "tags", "approved", "favorite", "usageSummary", "usageSummaryWithRelevancyScore", "hidden", "noAccess", "warning", "curatedItems", "isEntryOrExit", "reportTimeAttribution", "customerJourney", "dataGovernance", "aliasId", "dataCollectionType", "attributionModel" ]
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AnalyticsDimension"
            }
          },
          "401" : {
            "description" : "User Doesn't have sufficient privileges"
          }
        }
      }
    },
    "/favorites" : {
      "get" : {
        "tags" : [ "favorites" ],
        "summary" : "Returns a list of favorite objects for the current user meeting the paging restriction",
        "description" : "Returns an array of all of the favorites objects tied to the company. Setting a very large page size will return the list in a single request, but it may be more data than you expect and you may experience performance issues.",
        "operationId" : "favorites_findAllForCurrentUser",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "componentType",
          "in" : "query",
          "description" : "The component type to filter on. Required if also using componentIds filter.",
          "required" : false,
          "type" : "string",
          "enum" : [ "segment", "dashboard", "bookmark", "calculatedMetric", "project", "dateRange", "metric", "dimension", "virtualReportSuite", "scheduledJob", "alert", "classificationSet" ]
        }, {
          "name" : "componentIds",
          "in" : "query",
          "description" : "Comma-delimited list of componentIds to filter on. Must also pass componentType.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userid",
          "in" : "query",
          "description" : "The user ID to return details for. Only admins may use this option.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of results per page",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page number (base 0 - first page is \"0\")",
          "required" : false,
          "type" : "integer",
          "default" : 0
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Favorite"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "favorites" ],
        "summary" : "Creates 'favorite' records for a given component",
        "description" : "Accepts an array of Favorite objects to allow creation of one or many 'favorite' records in a single call.",
        "operationId" : "favorites_save",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "JSON-formatted ARRAY containing a list of favorite objects",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/Favorite"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Favorite"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "favorites" ],
        "summary" : "Deletes favorites by componentId. Accepts a list of componentIds and deletes any \"Favorites\" associated with them",
        "description" : "Deletes favorites based on componentIds.",
        "operationId" : "favorites_deleteByItemIds",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "componentType",
          "in" : "query",
          "description" : "The component type to operate on.",
          "required" : true,
          "type" : "string",
          "enum" : [ "segment", "dashboard", "bookmark", "calculatedMetric", "project", "dateRange", "metric", "dimension", "virtualReportSuite", "scheduledJob", "alert", "classificationSet" ]
        }, {
          "name" : "componentIds",
          "in" : "query",
          "description" : "A comma separated list of component Ids",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/favorites/{id}" : {
      "get" : {
        "tags" : [ "favorites" ],
        "summary" : "Retrieve a 'favorite' record by id",
        "description" : "",
        "operationId" : "favorites_findOne",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the \"Favorite\" record to return",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Favorite"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "favorites" ],
        "summary" : "Deletes the \"Favorite\" with the given id",
        "description" : "Deletes by favoriteId.",
        "operationId" : "favorites_deleteByFavoriteID",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the favorite",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object"
              }
            }
          },
          "400" : {
            "description" : "Attempting to remove a favorite by id that does not exist"
          },
          "403" : {
            "description" : "Attempting to remove a favorite for a user other than the authenticated user"
          }
        }
      }
    },
    "/metrics" : {
      "get" : {
        "tags" : [ "metrics" ],
        "summary" : "Returns a list of metrics for the given report suite",
        "description" : "This returns the metrics list primarily for the Analytics product. The platform identity API Returns a list of all possible metrics for the supported systems.",
        "operationId" : "getMetrics",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rsid",
          "in" : "query",
          "description" : "ID of desired report suite ie. sistr2",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "Locale that system named metrics should be returned in",
          "required" : false,
          "type" : "string",
          "default" : "en_US"
        }, {
          "name" : "segmentable",
          "in" : "query",
          "description" : "Filter the metrics by if they are valid in a segment.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "expansion",
          "in" : "query",
          "description" : "Add extra metadata to items (comma-delimited list)",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "tags", "approved", "favorite", "usageSummary", "usageSummaryWithRelevancyScore", "hidden", "noAccess", "warning", "curatedItems", "isEntryOrExit", "reportTimeAttribution", "customerJourney", "dataGovernance", "aliasId", "dataCollectionType" ]
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AnalyticsMetric"
            }
          },
          "400" : {
            "description" : "Invalid JSON input"
          },
          "403" : {
            "description" : "Insufficient access to perform operation"
          },
          "500" : {
            "description" : "Unexpected internal server error"
          }
        }
      }
    },
    "/metrics/{id}" : {
      "get" : {
        "tags" : [ "metrics" ],
        "summary" : "Returns a metric for the given report suite",
        "description" : "",
        "operationId" : "getMetric",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the metric for which to retrieve info. Note ids are values like pageviews, not metrics/pageviews",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "rsid",
          "in" : "query",
          "description" : "ID of desired report suite ie. sistr2",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "Locale that system named metrics should be returned in",
          "required" : false,
          "type" : "string",
          "default" : "en_US"
        }, {
          "name" : "includeHidden",
          "in" : "query",
          "description" : "Whether to include variables that are hidden in the UI or that the user doesn't have permission to.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "expansion",
          "in" : "query",
          "description" : "Add extra metadata to items (comma-delimited list)",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "tags", "approved", "favorite", "usageSummary", "usageSummaryWithRelevancyScore", "hidden", "noAccess", "warning", "curatedItems", "isEntryOrExit", "reportTimeAttribution", "customerJourney", "dataGovernance", "aliasId", "dataCollectionType" ]
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AnalyticsMetric"
            }
          },
          "400" : {
            "description" : "Invalid JSON input"
          },
          "403" : {
            "description" : "Insufficient access to perform operation"
          },
          "500" : {
            "description" : "Unexpected internal server error"
          }
        }
      }
    },
    "/reports/ranked" : {
      "post" : {
        "tags" : [ "reports" ],
        "summary" : "Runs a ranked report for the report in the post body",
        "description" : "See the [Reporting Interface wiki page](https://wiki.corp.adobe.com/display/scservices/Reporting+Interface) for details.",
        "operationId" : "runRankedReport",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "allowRemoteLoad",
          "in" : "query",
          "description" : "Controls if Oberon should remote load data.  Default behavior is true with fallback to false if remote data does not exist",
          "required" : false,
          "type" : "string",
          "default" : "default",
          "enum" : [ "true", "false", "default" ]
        }, {
          "name" : "useCache",
          "in" : "query",
          "description" : "Use caching for faster requests (Use cached dimensions to speed up permission checks - This does not do any report caching)",
          "required" : false,
          "type" : "boolean",
          "default" : true
        }, {
          "name" : "includeOberonXml",
          "in" : "query",
          "description" : "Controls if Oberon XML should be returned in the response - DEBUG ONLY",
          "required" : false,
          "type" : "boolean",
          "default" : false,
          "enum" : [ "true", "false" ]
        }, {
          "name" : "includePlatformPredictiveObjects",
          "in" : "query",
          "description" : "Controls if platform Predictive Objects should be returned in the response. Only available when using Anomaly Detection or Forecasting- DEBUG ONLY",
          "required" : false,
          "type" : "boolean",
          "default" : false,
          "enum" : [ "true", "false" ]
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RankedRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RankedReportData"
            }
          },
          "400" : {
            "description" : "Invalid input; name, rsid, and definition are all required. Definition must be formatted as a JSON Object.",
            "schema" : {
              "$ref" : "#/definitions/ReportErrorStatus"
            }
          }
        }
      }
    },
    "/segments" : {
      "get" : {
        "tags" : [ "segments" ],
        "summary" : "Retrieves all segments, or paginated segments",
        "description" : "A segment response will always include these default items:<br><b>id,name,description,rsid,owner</b><br><br>Other attributes can be optionally requested through the 'expansion' field: <br><b>modified</b>: Date that the segment was last modified (ISO 8601)<br><b>definition</b>: Segment definition as JSON object<br><b>compatibility</b>: Products that the segment is compatible with<br><b>reportSuiteName</b>: Also return the friendly Report Suite name for the RSID<br><b>legacyId</b>: Legacy segment ID from old segment database (only exists if the segment was migrated from the old segment DB)<br><b>dwInUse</b>: True if the segment is currently in use in a DW request<br><b>asiInUse</b>: True if the segment is currently in use in an ASI slot<br><b>aamStatus</b>: Returns AAM/Raven publishing status (cross-product segment sharing)<br><b>favorite</b>: True if segment has been marked as a 'Favorite'<br><b>tags</b>: Gives all existing tags associated with the segment<br><b>approved</b>: True if segment has been marked as 'Approved'<br><b>shares</b>: Gives all existing shares for the segment<br><b>sharesFullName</b>: Give 'shares', but also include the shared-to user's friendly login name as 'shareToDisplayName' in each share object<br><b>ownerFullName</b>: Add friendly full login name (string) to the 'owner' object<br><b>isDeleted</b>: Returns whether or not the segment is 'Deleted' (note that deleted segments are only returned if requested by ID)",
        "operationId" : "findAll",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "expansion",
          "in" : "query",
          "description" : "Comma-delimited list of additional segment metadata fields to include on response.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "reportSuiteName", "siteTitle", "ownerFullName", "modified", "migratedIds", "isDeleted", "approved", "favorite", "shares", "tags", "sharesFullName", "usageSummary", "usageSummaryWithRelevancyScore", "legacyId", "compatibility", "definition", "internal", "dataGroup", "reportTimeAttribution", "customerJourney" ]
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "includeType",
          "in" : "query",
          "description" : "Include additional segments not owned by user. The \"all\" option takes precedence over \"shared\"",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "shared", "all", "templates", "deleted", "internal", "curatedItem" ]
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "rsids",
          "in" : "query",
          "description" : "Filter list to only include segments tied to specified RSID list (comma-delimited)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "dataType",
          "in" : "query",
          "description" : "Filter list to only include segments compatible with the specified product",
          "required" : false,
          "type" : "string",
          "enum" : [ "dw", "oberon" ]
        }, {
          "name" : "ownerId",
          "in" : "query",
          "description" : "Filter list to only include segments owned by the specified loginId",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "segmentFilter",
          "in" : "query",
          "description" : "Filter list to only include segments in the specified list (comma-delimited list of IDs)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "filterByIds",
          "in" : "query",
          "description" : "Filter list to only include segments in the specified list (comma-delimited list of IDs) (this is the same as segmentFilter, and is overwritten by segmentFilter",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "toBeUsedInRsid",
          "in" : "query",
          "description" : "Required when reportTimeAttribution != null or expansion=reportTimeAttribution",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "includeDeleted",
          "in" : "query",
          "description" : "DEPRECATED use deleted includeType - Include disabled/deleted segments in the response. Note: also forces the 'isDeleted' expansion",
          "required" : false,
          "type" : "string",
          "default" : "false",
          "enum" : [ "true", "false" ]
        }, {
          "name" : "reportTimeAttribution",
          "in" : "query",
          "description" : "Filter list to only include segments by reportTimeAttribution",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "Locale",
          "required" : false,
          "type" : "string",
          "default" : "en_US"
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "Filter list to only include segments that contains the Name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "tagNames",
          "in" : "query",
          "description" : "Filter list to only include segments that contains one of the tags",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "filterByModifiedAfter",
          "in" : "query",
          "description" : "Filter list to only include segments modified since this date (ISO8601 format)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pagination",
          "in" : "query",
          "description" : "return paginated results",
          "required" : false,
          "type" : "string",
          "default" : "false",
          "enum" : [ "true", "false" ]
        }, {
          "name" : "dataGroup",
          "in" : "query",
          "description" : "Filter list to only include segments with the given data group",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "query",
          "description" : "Decides the version of segment service",
          "required" : false,
          "type" : "string",
          "default" : "old",
          "enum" : [ "old", "new" ]
        }, {
          "name" : "curatedRsid",
          "in" : "query",
          "description" : "Include the curatedItem status for given Rsid",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of results per page",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page number (base 0 - first page is \"0\")",
          "required" : false,
          "type" : "integer",
          "default" : 0
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AnalyticsSegmentResponseItem"
            }
          },
          "400" : {
            "description" : "Unable to retrieve list of segments shared with user"
          },
          "401" : {
            "description" : "Owner filter error; user specified is not in the same company as the requesting user"
          },
          "403" : {
            "description" : "Requesting non-shared segments for other users is restricted to admin users"
          },
          "500" : {
            "description" : "External API error; Segment retrieval failed"
          }
        }
      },
      "post" : {
        "tags" : [ "segments" ],
        "summary" : "Creates a new segment",
        "description" : "Creates a new segment. The following attributes are available when creating a segment:<br><b>Required: name, definition, rsid</b><br>Optional: description, aamStatus<br><br>Note: \"aamStatus\" is used to \"publish\" a report suite segment to other products in the Experience Cloud. Description is always required when publishing with aamStatus. The report suite must already be pre-configured for AAM for publishing to succeed (see the \"/segments/aamStatus/\" endpoint for more information). <br>Format for aamStatus object:<br>\"aamStatus\":{\"published\":[\"rsid1\",\"rsid2\"]}<br><br>Example definition for use in testing API below (\"Page exists\"):<br>\"definition\":{\"func\":\"segment\",\"container\":{\"func\":\"container\",\"context\":\"hits\",\"pred\":{\"func\":\"exists\",\"description\":\"Page\",\"val\":{\"func\":\"attr\",\"name\":\"variables/page\"}}},\"version\":[1,0,0]}<br><br><b><span style=\"text-decoration: underline;\">SegmentResponse</span></b><br>A segment response will always include these default items:<br><b>id, name, description, rsid, owner</b><br>Other attributes can be optionally requested through the 'expansion' field as defined/documented in the GET endpoints (see GET \"/segments\" or GET \"/segments/{id}\" for more documentation).",
        "operationId" : "createSegment",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "expansion",
          "in" : "query",
          "description" : "Comma-delimited list of additional segment metadata fields to include on response.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "reportSuiteName", "siteTitle", "ownerFullName", "modified", "migratedIds", "isDeleted", "approved", "favorite", "shares", "tags", "sharesFullName", "usageSummary", "usageSummaryWithRelevancyScore", "dwInUse", "asiInUse", "aamStatus", "legacyId", "compatibility", "definition", "internal", "dataGroup", "reportTimeAttribution", "customerJourney", "virtualReportSuites" ]
          },
          "collectionFormat" : "multi"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "JSON-formatted Object containing key/value pairs for segment creation.",
          "required" : false,
          "schema" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          }
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "Locale",
          "required" : false,
          "type" : "string",
          "default" : "en_US"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AnalyticsSegmentResponseItem"
            }
          },
          "400" : {
            "description" : "Invalid input; name, rsid, and definition are all required. Definition must be formatted as a JSON Object."
          },
          "500" : {
            "description" : "External API error; Segment create or retrieval failed"
          }
        }
      }
    },
    "/segments/{id}" : {
      "get" : {
        "tags" : [ "segments" ],
        "summary" : "Retrieves a single segment by ID",
        "description" : "A segment response will always include these default items:<br><b>id,name,description,rsid,owner</b><br><br>Other attributes can be optionally requested through the 'expansion' field: <br><b>modified</b>: Date that the segment was last modified (ISO 8601)<br><b>definition</b>: Segment definition as JSON object<br><b>compatibility</b>: Products that the segment is compatible with<br><b>reportSuiteName</b>: Also return the friendly Report Suite name for the RSID<br><b>legacyId</b>: Legacy segment ID from old segment database (only exists if the segment was migrated from the old segment DB)<br><b>dwInUse</b>: True if the segment is currently in use in a DW request<br><b>asiInUse</b>: True if the segment is currently in use in an ASI slot<br><b>aamStatus</b>: Returns AAM/Raven publishing status (cross-product segment sharing)<br><b>favorite</b>: True if segment has been marked as a 'Favorite'<br><b>tags</b>: Gives all existing tags associated with the segment<br><b>approved</b>: True if segment has been marked as 'Approved'<br><b>shares</b>: Gives all existing shares for the segment<br><b>sharesFullName</b>: Give 'shares', but also include the shared-to user's friendly login name as 'shareToDisplayName' in each share object<br><b>ownerFullName</b>: Add friendly full login name (string) to the 'owner' object<br><b>isDeleted</b>: Returns whether or not the segment is 'Deleted' (note that deleted segments are only returned if requested by ID)",
        "operationId" : "findOne",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The segment ID to retrieve",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "expansion",
          "in" : "query",
          "description" : "Comma-delimited list of additional segment metadata fields to include on response.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "reportSuiteName", "siteTitle", "ownerFullName", "modified", "migratedIds", "isDeleted", "approved", "favorite", "shares", "tags", "sharesFullName", "usageSummary", "usageSummaryWithRelevancyScore", "dwInUse", "asiInUse", "aamStatus", "legacyId", "compatibility", "definition", "internal", "dataGroup", "reportTimeAttribution", "customerJourney", "virtualReportSuites" ]
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "version",
          "in" : "query",
          "description" : "Decides the version of segment service",
          "required" : false,
          "type" : "string",
          "default" : "old",
          "enum" : [ "old", "new" ]
        }, {
          "name" : "toBeUsedInRsid",
          "in" : "query",
          "description" : "Evaluate the reportTimeAttribution/customerJourney compatibility for the passed report suite",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AnalyticsSegmentResponseItem"
            }
          },
          "403" : {
            "description" : "Requesting non-shared segments for other users is restricted to admin users"
          },
          "500" : {
            "description" : "External API error; segment retrieval failed"
          }
        }
      },
      "put" : {
        "tags" : [ "segments" ],
        "summary" : "Make changes or updates to an existing segment",
        "description" : "The following fields can be modified through this endpoint: <br><b>name, description, definition, owner, rsid, aamStatus</b><br><br>Note: \"aamStatus\" is used to \"publish\" a report suite segment to other products in the Experience Cloud. Description is always required when publishing with aamStatus. The report suite must already be pre-configured for AAM for publishing to succeed (see the \"/segments/aamStatus/\" endpoint for more information). <br>Format for aamStatus object:<br>\"aamStatus\":{\"published\":[\"rsid1\",\"rsid2\"]}<br><br>Example \"defintion\" for use in testing API below (\"Page exists\"):<br>\"definition\":{\"func\":\"segment\",\"container\":{\"func\":\"container\",\"context\":\"hits\",\"pred\":{\"func\":\"exists\",\"description\":\"Page\",\"val\":{\"func\":\"attr\",\"name\":\"variables/page\"}}},\"version\":[1,0,0]}<br><br>Response will be the newly modified segment object after the update request completes.<br><br><b><span style=\"text-decoration: underline;\">SegmentResponse</span></b><br>A segment response will always include these default items:<br><b>id, name, description, rsid, owner</b><br>Other attributes can be optionally requested through the 'expansion' field as defined/documented in the GET endpoints (see GET \"/segments\" or GET \"/segments/{id}\" for more documentation).",
        "operationId" : "updateSegment",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "expansion",
          "in" : "query",
          "description" : "Comma-delimited list of additional segment metadata fields to include on response.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "reportSuiteName", "siteTitle", "ownerFullName", "modified", "migratedIds", "isDeleted", "approved", "favorite", "shares", "tags", "sharesFullName", "usageSummary", "usageSummaryWithRelevancyScore", "dwInUse", "asiInUse", "aamStatus", "legacyId", "compatibility", "definition", "internal", "dataGroup", "reportTimeAttribution", "customerJourney", "virtualReportSuites" ]
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Segment ID to be updated",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "JSON-formatted Object containing key/value pairs to be updated.",
          "required" : false,
          "schema" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          }
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "Locale",
          "required" : false,
          "type" : "string",
          "default" : "en_US"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AnalyticsSegmentResponseItem"
            }
          },
          "400" : {
            "description" : "Definition must be formatted as a JSON Object"
          },
          "401" : {
            "description" : "Company mismatch; segment ownership can only be transferred within the same organization"
          },
          "403" : {
            "description" : "User does not have permission to update this segment"
          },
          "500" : {
            "description" : "External API error; Segment update or retrieval failed"
          }
        }
      },
      "delete" : {
        "tags" : [ "segments" ],
        "summary" : "Delete a segment by ID",
        "description" : "",
        "operationId" : "deleteSegment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The segment ID to be deleted",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "Locale",
          "required" : false,
          "type" : "string",
          "default" : "en_US"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          },
          "500" : {
            "description" : "External API error; Segment delete failed"
          }
        }
      }
    },
    "/tags" : {
      "get" : {
        "tags" : [ "tags" ],
        "summary" : "Returns a list of tags for the current user's company",
        "description" : "",
        "operationId" : "findAllForCompany",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of results per page",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page number (base 0 - first page is \"0\")",
          "required" : false,
          "type" : "integer",
          "default" : 0
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Tag"
              }
            }
          },
          "500" : {
            "description" : "Unable to retrieve list of tags for user."
          }
        }
      },
      "post" : {
        "tags" : [ "tags" ],
        "summary" : "Saves the given tag(s) for the current user's company",
        "description" : "Allows creation of a new tag and applies that new tag to the passed component",
        "operationId" : "saveTagList",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "JSON-formatted array of Tag objects containing key-value pairs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/Tag"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Tag"
              }
            }
          },
          "500" : {
            "description" : "Unable to save list of tags."
          }
        }
      },
      "delete" : {
        "tags" : [ "tags" ],
        "summary" : "Disassociates all tags from the given components",
        "description" : "Removes all tags from the passed componentIds. Note that currently this is done in a single DB query, so there is a single combined response for the entire operation.",
        "operationId" : "deleteTagItems",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "componentIds",
          "in" : "query",
          "description" : "Comma-separated list of componentIds to operate on.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "componentType",
          "in" : "query",
          "description" : "The component type to operate on.",
          "required" : true,
          "type" : "string",
          "enum" : [ "segment", "dashboard", "bookmark", "calculatedMetric", "project", "dateRange", "metric", "dimension", "virtualReportSuite", "scheduledJob", "alert", "classificationSet" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object"
              }
            }
          },
          "400" : {
            "description" : "Invalid component type."
          },
          "500" : {
            "description" : "Unable to remove tags for given components."
          }
        }
      }
    },
    "/tags/{id}" : {
      "get" : {
        "tags" : [ "tags" ],
        "summary" : "Retrieves an tag by its id",
        "description" : "",
        "operationId" : "getTagById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Tag ID to be retrieved",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Tag"
            }
          },
          "404" : {
            "description" : "Unable to find a tag with the given ID"
          },
          "500" : {
            "description" : "Unexpected server error while trying to retrieve tag"
          }
        }
      },
      "delete" : {
        "tags" : [ "tags" ],
        "summary" : "Removes the tagId and all associations from that tag to any components",
        "description" : "Delete by tagId. Will un-tag any/all components that were associated with the passed tagId.",
        "operationId" : "deleteTag",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The tagId to be deleted",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object"
              }
            }
          },
          "404" : {
            "description" : "The given tagId does not exist"
          },
          "500" : {
            "description" : "Unable to delete the given tagId."
          }
        }
      }
    },
    "/users/me": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get the current user",
        "description": "",
        "operationId": "getCurrentUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "expansion",
            "in": "query",
            "description": "Comma-delimited list of additional analytics user metadata fields to include on response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "admin",
                "imsOrgId",
                "marketingCloudOnly",
                "imsUserMigration",
                "tenantId"
              ]
            },
            "collectionFormat": "csv"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AnalyticsUser"
            }
          }
        }
      }
    }
  },
  "definitions" : {
    "AnalyticsCalculatedMetric" : {
      "type" : "object",
      "required" : [ "definition" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "System generated id",
          "readOnly" : true
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "rsid" : {
          "type" : "string",
          "description" : "The report suite id for which the component was created/updated"
        },
        "reportSuiteName" : {
          "type" : "string",
          "description" : "The report suite name for which the component was created/updated",
          "readOnly" : true
        },
        "owner" : {
          "$ref" : "#/definitions/Owner"
        },
        "isDeleted" : {
          "type" : "boolean"
        },
        "polarity" : {
          "type" : "string",
          "description" : "Set metric polarity, which indicates whether it's good or bad if a given metric goes up. Default=positive",
          "enum" : [ "positive", "negative" ]
        },
        "precision" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of decimal places to include in calculated metric result"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "CURRENCY", "TIME", "DECIMAL", "PERCENT" ]
        },
        "definition" : {
          "description" : "Calculated metric definition object",
          "$ref" : "#/definitions/CalculatedMetricDef"
        },
        "template" : {
          "type" : "boolean"
        },
        "shares" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Share"
          }
        },
        "approved" : {
          "type" : "boolean"
        },
        "favorite" : {
          "type" : "boolean"
        },
        "usageSummary" : {
          "$ref" : "#/definitions/SummarizedUsageItem"
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Tag"
          }
        },
        "siteTitle" : {
          "type" : "string"
        },
        "modified" : {
          "type" : "string",
          "format" : "date-time"
        },
        "created" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Calculated metric creation date",
          "readOnly" : true
        }
      }
    },
    "AnalyticsUser": {
      "type": "object",
      "properties": {
        "companyid": {
          "type": "integer",
          "format": "int32"
        },
        "loginId": {
          "type": "integer",
          "format": "int32"
        },
        "login": {
          "type": "string"
        },
        "admin": {
          "type": "boolean",
          "default": false
        },
        "apiKey": {
          "type": "string"
        },
        "createDate": {
          "type": "string",
          "format": "date-time"
        },
        "disabled": {
          "type": "boolean",
          "default": false
        },
        "email": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "fullName": {
          "type": "string"
        },
        "imsUserId": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "lastLogin": {
          "type": "string",
          "format": "date-time"
        },
        "phoneNumber": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "AnalyticsDimension" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "title" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "STRING", "INT", "DECIMAL", "CURRENCY", "PERCENT", "TIME", "ENUM", "ORDERED_ENUM" ]
        },
        "category" : {
          "type" : "string"
        },
        "parent" : {
          "type" : "string"
        },
        "extraTitleInfo" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "hidden" : {
          "type" : "boolean"
        },
        "noAccess" : {
          "type" : "boolean"
        },
        "shares" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Share"
          }
        },
        "approved" : {
          "type" : "boolean"
        },
        "favorite" : {
          "type" : "boolean"
        },
        "usageSummary" : {
          "$ref" : "#/definitions/SummarizedUsageItem"
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Tag"
          }
        }
      }
    },
    "AnalyticsMetric" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "title" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "STRING", "INT", "DECIMAL", "CURRENCY", "PERCENT", "TIME", "ENUM", "ORDERED_ENUM" ]
        },
        "extraTitleInfo" : {
          "type" : "string"
        },
        "category" : {
          "type" : "string"
        },
        "precision" : {
          "type" : "integer",
          "format" : "int32"
        },
        "calculated" : {
          "type" : "boolean"
        },
        "description" : {
          "type" : "string"
        },
        "polarity" : {
          "type" : "string",
          "enum" : [ "positive", "negative" ]
        },
        "hidden" : {
          "type" : "boolean"
        },
        "shares" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Share"
          }
        },
        "approved" : {
          "type" : "boolean"
        },
        "favorite" : {
          "type" : "boolean"
        },
        "usageSummary" : {
          "$ref" : "#/definitions/SummarizedUsageItem"
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Tag"
          }
        }
      }
    },
    "AnalyticsSegmentResponseItem" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Id of the segment."
        },
        "name" : {
          "type" : "string",
          "description" : "A name for the segment."
        },
        "description" : {
          "type" : "string",
          "description" : "A description of the segment."
        },
        "rsid" : {
          "type" : "string",
          "description" : "The report suite id."
        },
        "reportSuiteName" : {
          "type" : "string",
          "description" : "The friendly name for the report suite id."
        },
        "owner" : {
          "description" : "The owner of the segment as an Owner object.",
          "$ref" : "#/definitions/Owner"
        },
        "isDeleted" : {
          "type" : "boolean",
          "description" : "Whether or not the segment is 'Deleted' (deleted segments are only returned if requested by id)"
        },
        "definition" : {
          "type" : "object",
          "description" : "The segment definition as a JSON object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "shares" : {
          "type" : "array",
          "description" : "Existing shares for the segment.",
          "items" : {
            "$ref" : "#/definitions/Share"
          }
        },
        "approved" : {
          "type" : "boolean",
          "description" : "Whether or not the segment has been marked approved."
        },
        "favorite" : {
          "type" : "boolean",
          "description" : "Whether or not the segment has been marked as a favorite."
        },
        "usageSummary" : {
          "description" : "How frequently the user uses this segment.",
          "$ref" : "#/definitions/SummarizedUsageItem"
        },
        "siteTitle" : {
          "type" : "string",
          "description" : "A name for the report suite.  This is deprecated and should use the report suite name instead."
        },
        "tags" : {
          "type" : "array",
          "description" : "All existing tags associated with the segment.",
          "items" : {
            "$ref" : "#/definitions/Tag"
          }
        },
        "modified" : {
          "type" : "string",
          "format" : "date-time"
        },
        "created" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "CalculatedMetricDef" : {
      "type" : "object"
    },
    "CalculatedMetricErrorStatus" : {
      "type" : "object",
      "properties" : {
        "errorCode" : {
          "type" : "string",
          "enum" : [ "no_feature_access_to_advanced_calculated_metrics", "invalid_metric_access", "method_not_allowed", "resource_conflict", "invalid_access", "resource_temporarily_unavailable", "external_api_failure", "resource_already_exists", "invalid_state", "invalid_json_input", "invalid_parameters", "invalid_dimension_access", "unsupported_data_type", "resource_not_found", "insufficient_access", "health_check_error", "invalid_data", "unexpected_error", "external_api_error", "unsupported_resource", "io_error", "invalid_request", "invalid_client_id", "unauthorized", "authorization_error", "invalid_token", "insufficient_scope" ]
        },
        "errorDescription" : {
          "type" : "string"
        },
        "errorId" : {
          "type" : "string"
        },
        "errorDetails" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        }
      }
    },
    "Column" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string",
          "enum" : [ "DIMENSION", "METRIC" ]
        },
        "id" : {
          "type" : "string"
        },
        "title" : {
          "type" : "string"
        },
        "segmentIds" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "Company" : {
      "type" : "object",
      "required" : [ "billingCustomerId", "description", "globalCompanyKey", "imsOrgid", "name", "namespace" ],
      "properties" : {
        "adminLogin" : {
          "type" : "string",
          "description" : "Login of the main user responsible for the login company"
        },
        "name" : {
          "type" : "string"
        },
        "companyPrefix" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "namespace" : {
          "type" : "string",
          "description" : "System generated namespace"
        },
        "globalCompanyKey" : {
          "type" : "string",
          "description" : "System generated cross data-center unique company id"
        },
        "disabled" : {
          "type" : "boolean"
        },
        "accessType" : {
          "type" : "string",
          "enum" : [ "pointProducts", "standard", "premium", "mobile", "premiumPredictive", "premiumAttribution", "premiumCustomer", "core", "essentialsDps", "foundation", "select", "prime", "ultimate" ]
        },
        "validEmails" : {
          "type" : "array",
          "description" : "List of allowed email address domains for users in the company",
          "items" : {
            "type" : "string"
          }
        },
        "allowAdobeEmails" : {
          "type" : "boolean"
        },
        "companyid" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "DeleteResponse" : {
      "type" : "object",
      "properties" : {
        "result" : {
          "type" : "string"
        },
        "message" : {
          "type" : "string"
        }
      }
    },
    "ErrorStatus" : {
      "type" : "object",
      "properties" : {
        "errorCode" : {
          "type" : "string",
          "enum" : [ "invalid_metric_access", "method_not_allowed", "resource_conflict", "invalid_access", "resource_temporarily_unavailable", "external_api_failure", "resource_already_exists", "invalid_state", "invalid_json_input", "invalid_parameters", "invalid_dimension_access", "unsupported_data_type", "resource_not_found", "insufficient_access", "health_check_error", "invalid_data", "unexpected_error", "external_api_error", "unsupported_resource", "io_error", "invalid_request", "invalid_client_id", "unauthorized", "authorization_error", "invalid_token", "insufficient_scope" ]
        },
        "errorDescription" : {
          "type" : "string"
        },
        "errorId" : {
          "type" : "string"
        },
        "errorDetails" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        }
      }
    },
    "Favorite" : {
      "type" : "object",
      "properties" : {
        "favoriteId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "companyId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "userId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "componentTypeId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "componentType" : {
          "type" : "string"
        },
        "componentId" : {
          "type" : "string"
        },
        "favoriteTimestamp" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "JSONObject" : {
      "type" : "object"
    },
    "JsonNode" : {
      "type" : "object",
      "properties" : {
        "array" : {
          "type" : "boolean"
        },
        "null" : {
          "type" : "boolean"
        },
        "float" : {
          "type" : "boolean"
        },
        "number" : {
          "type" : "boolean"
        },
        "nodeType" : {
          "type" : "string",
          "enum" : [ "ARRAY", "BINARY", "BOOLEAN", "MISSING", "NULL", "NUMBER", "OBJECT", "POJO", "STRING" ]
        },
        "integralNumber" : {
          "type" : "boolean"
        },
        "missingNode" : {
          "type" : "boolean"
        },
        "bigInteger" : {
          "type" : "boolean"
        },
        "binary" : {
          "type" : "boolean"
        },
        "double" : {
          "type" : "boolean"
        },
        "containerNode" : {
          "type" : "boolean"
        },
        "int" : {
          "type" : "boolean"
        },
        "long" : {
          "type" : "boolean"
        },
        "bigDecimal" : {
          "type" : "boolean"
        },
        "valueNode" : {
          "type" : "boolean"
        },
        "textual" : {
          "type" : "boolean"
        },
        "boolean" : {
          "type" : "boolean"
        },
        "object" : {
          "type" : "boolean"
        },
        "pojo" : {
          "type" : "boolean"
        },
        "short" : {
          "type" : "boolean"
        },
        "floatingPointNumber" : {
          "type" : "boolean"
        }
      }
    },
    "Locale" : {
      "type" : "object",
      "properties" : {
        "language" : {
          "type" : "string"
        },
        "country" : {
          "type" : "string"
        },
        "displayCountry" : {
          "type" : "string"
        },
        "displayLanguage" : {
          "type" : "string"
        },
        "displayName" : {
          "type" : "string"
        },
        "displayScript" : {
          "type" : "string"
        },
        "displayVariant" : {
          "type" : "string"
        },
        "extensionKeys" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "iso3Country" : {
          "type" : "string"
        },
        "iso3Language" : {
          "type" : "string"
        },
        "script" : {
          "type" : "string"
        },
        "unicodeLocaleAttributes" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "unicodeLocaleKeys" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "variant" : {
          "type" : "string"
        }
      }
    },
    "MetricsWarning" : {
      "type" : "object",
      "properties" : {
        "title" : {
          "type" : "string"
        },
        "text" : {
          "type" : "string"
        },
        "helpLink" : {
          "type" : "string"
        }
      }
    },
    "Owner" : {
      "type" : "object",
      "required" : [ "id" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "the login id of the owner"
        },
        "name" : {
          "type" : "string",
          "position" : 1,
          "description" : "the friendly full login name of the owner, included when the expansion parameter ownerFullName is true"
        },
        "login" : {
          "type" : "string",
          "position" : 1,
          "description" : "the friendly full login name of the owner, included when the expansion parameter ownerFullName is true"
        }
      }
    },
    "Pageable" : {
      "type" : "object",
      "properties" : {
        "offset" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sort" : {
          "$ref" : "#/definitions/Sort"
        },
        "pageNumber" : {
          "type" : "integer",
          "format" : "int32"
        },
        "pageSize" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "PredictiveSettings" : {
      "type" : "object",
      "properties" : {
        "trainingPeriods" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "RankedColumnError" : {
      "type" : "object",
      "properties" : {
        "columnId" : {
          "type" : "string"
        },
        "errorCode" : {
          "type" : "string",
          "enum" : [ "unauthorized_metric", "unauthorized_dimension", "unauthorized_dimension_global", "anomaly_detection_failure_unexpected_item_count", "anomaly_detection_failure_tsa_service", "not_enabled_metric", "not_enabled_dimension", "not_enabled_dimension_global" ]
        },
        "errorId" : {
          "type" : "string"
        },
        "errorDescription" : {
          "type" : "string"
        }
      }
    },
    "RankedColumnMetaData" : {
      "type" : "object",
      "properties" : {
        "dimension" : {
          "$ref" : "#/definitions/ReportDimension"
        },
        "columnIds" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "columnErrors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RankedColumnError"
          }
        }
      }
    },
    "RankedReportData" : {
      "type" : "object",
      "properties" : {
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "firstPage" : {
          "type" : "boolean"
        },
        "lastPage" : {
          "type" : "boolean"
        },
        "numberOfElements" : {
          "type" : "integer",
          "format" : "int32"
        },
        "number" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "type" : "string"
        },
        "request" : {
          "$ref" : "#/definitions/RankedRequest"
        },
        "reportId" : {
          "type" : "string"
        },
        "columns" : {
          "$ref" : "#/definitions/RankedColumnMetaData"
        },
        "rows" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Row"
          }
        },
        "summaryData" : {
          "$ref" : "#/definitions/RankedSummaryData"
        },
        "oberonRequestXML" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "oberonResponseXML" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "predictiveRequestObjects" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "predictiveResponseObjects" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "RankedRequest" : {
      "type" : "object",
      "properties" : {
        "rsid" : {
          "type" : "string"
        },
        "dimension" : {
          "type" : "string"
        },
        "locale" : {
          "$ref" : "#/definitions/Locale"
        },
        "globalFilters" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ReportFilter"
          }
        },
        "search" : {
          "$ref" : "#/definitions/ReportSearch"
        },
        "settings" : {
          "$ref" : "#/definitions/RankedSettings"
        },
        "statistics" : {
          "$ref" : "#/definitions/RankedStatistics"
        },
        "metricContainer" : {
          "$ref" : "#/definitions/ReportMetrics"
        },
        "globalPredictiveSettings" : {
          "$ref" : "#/definitions/PredictiveSettings"
        },
        "anchorDate" : {
          "type" : "string"
        }
      }
    },
    "RankedSettings" : {
      "type" : "object",
      "properties" : {
        "limit" : {
          "type" : "integer",
          "format" : "int32"
        },
        "page" : {
          "type" : "integer",
          "format" : "int32"
        },
        "dimensionSort" : {
          "type" : "string"
        },
        "countRepeatInstances" : {
          "type" : "boolean"
        },
        "reflectRequest" : {
          "type" : "boolean"
        },
        "suiteReportingContext" : {
          "type" : "string",
          "enum" : [ "DEVICE", "TROMMEL_COMBINED" ]
        },
        "includeAnomalyDetection" : {
          "type" : "boolean"
        },
        "includePercentChange" : {
          "type" : "boolean"
        },
        "darkSessionsEnabled" : {
          "type" : "boolean"
        },
        "includeLatLong" : {
          "type" : "boolean"
        },
        "dataSchema" : {
          "type" : "string"
        }
      }
    },
    "RankedStatistics" : {
      "type" : "object",
      "properties" : {
        "functions" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "ignoreZeroes" : {
          "type" : "boolean"
        }
      }
    },
    "RankedSummaryData" : {
      "type" : "object"
    },
    "ReportDimension" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "STRING", "INT", "DECIMAL", "CURRENCY", "PERCENT", "TIME", "ENUM", "ORDERED_ENUM" ]
        }
      }
    },
    "ReportErrorStatus" : {
      "type" : "object",
      "properties" : {
        "errorCode" : {
          "type" : "string",
          "enum" : [ "invalid_segment_ids_found", "invalid_metric_access", "method_not_allowed", "resource_conflict", "invalid_access", "resource_temporarily_unavailable", "external_api_failure", "resource_already_exists", "invalid_state", "invalid_json_input", "invalid_parameters", "invalid_dimension_access", "unsupported_data_type", "resource_not_found", "insufficient_access", "health_check_error", "invalid_data", "unexpected_error", "external_api_error", "unsupported_resource", "io_error", "invalid_request", "invalid_client_id", "unauthorized", "authorization_error", "invalid_token", "insufficient_scope" ]
        },
        "errorDescription" : {
          "type" : "string"
        },
        "errorId" : {
          "type" : "string"
        },
        "errorDetails" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        }
      }
    },
    "ReportFilter" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "DATE_RANGE", "BREAKDOWN", "SEGMENT", "EXCLUDE_ITEM_IDS" ]
        },
        "dimension" : {
          "type" : "string"
        },
        "itemId" : {
          "type" : "string"
        },
        "itemIds" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "segmentId" : {
          "type" : "string"
        },
        "segmentDefinition" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "dateRange" : {
          "type" : "string"
        },
        "excludeItemIds" : {
          "type" : "array",
          "items" : {
            "type" : "integer"
          }
        }
      }
    },
    "ReportMetric" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "columnId" : {
          "type" : "string"
        },
        "allocationType" : {
          "type" : "string"
        },
        "filters" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "sort" : {
          "type" : "string"
        },
        "metricDefinition" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "metricView" : {
          "type" : "string"
        },
        "predictive" : {
          "$ref" : "#/definitions/ReportMetricPredictiveSettings"
        }
      }
    },
    "ReportMetricPredictiveSettings" : {
      "type" : "object",
      "properties" : {
        "anomalyConfidence" : {
          "type" : "number",
          "format" : "double"
        }
      }
    },
    "ReportMetrics" : {
      "type" : "object",
      "properties" : {
        "metricFilters" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ReportFilter"
          }
        },
        "metrics" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ReportMetric"
          }
        }
      }
    },
    "ReportSearch" : {
      "type" : "object",
      "properties" : {
        "clause" : {
          "type" : "string"
        },
        "excludeItemIds" : {
          "type" : "array",
          "items" : {
            "type" : "integer"
          }
        },
        "itemIds" : {
          "type" : "array",
          "items" : {
            "type" : "integer"
          }
        },
        "includeSearchTotal" : {
          "type" : "boolean"
        },
        "empty" : {
          "type" : "boolean"
        }
      }
    },
    "Row" : {
      "type" : "object",
      "properties" : {
        "itemId" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "number",
            "format" : "double"
          }
        },
        "dataExpected" : {
          "type" : "array",
          "items" : {
            "type" : "number",
            "format" : "double"
          }
        },
        "dataUpperBound" : {
          "type" : "array",
          "items" : {
            "type" : "number",
            "format" : "double"
          }
        },
        "dataLowerBound" : {
          "type" : "array",
          "items" : {
            "type" : "number",
            "format" : "double"
          }
        },
        "dataAnomalyDetected" : {
          "type" : "array",
          "items" : {
            "type" : "boolean"
          }
        },
        "percentChange" : {
          "type" : "array",
          "items" : {
            "type" : "number",
            "format" : "double"
          }
        },
        "latitude" : {
          "type" : "number",
          "format" : "double"
        },
        "longitude" : {
          "type" : "number",
          "format" : "double"
        }
      }
    },
    "RowItem" : {
      "type" : "object",
      "properties" : {
        "itemId" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "Share" : {
      "type" : "object",
      "required" : [ "componentId", "shareToId", "shareToType" ],
      "properties" : {
        "shareId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "shareToId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "shareToType" : {
          "type" : "string"
        },
        "componentType" : {
          "type" : "string"
        },
        "componentId" : {
          "type" : "string"
        },
        "shareToDisplayName" : {
          "type" : "string"
        },
        "shareToLogin" : {
          "type" : "string"
        }
      }
    },
    "Sort" : {
      "type" : "object"
    },
    "SummarizedUsageItem" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "format" : "int32"
        },
        "mostRecentTimestamp" : {
          "type" : "string",
          "format" : "date-time"
        },
        "itemId" : {
          "type" : "string"
        },
        "relevancyScore" : {
          "type" : "number",
          "format" : "float"
        }
      }
    },
    "Tag" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "the tag id"
        },
        "name" : {
          "type" : "string",
          "description" : "the tag name "
        },
        "description" : {
          "type" : "string",
          "description" : "the tag description"
        },
        "components" : {
          "type" : "array",
          "description" : "the list of components that have been tagged with this tag",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/TaggedComponent"
          }
        }
      },
      "description" : "Tag Model"
    },
    "TaggedComponent" : {
      "type" : "object",
      "properties" : {
        "componentType" : {
          "type" : "string"
        },
        "componentId" : {
          "type" : "string"
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Tag"
          }
        }
      }
    },
    "User" : {
      "type" : "object",
      "properties" : {
        "loginId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "login" : {
          "type" : "string"
        },
        "companyid" : {
          "type" : "integer",
          "format" : "int32"
        },
        "admin" : {
          "type" : "boolean"
        },
        "email" : {
          "type" : "string"
        },
        "firstName" : {
          "type" : "string"
        },
        "imsUserId" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "fullName" : {
          "type" : "string"
        }
      }
    }
  }
}
