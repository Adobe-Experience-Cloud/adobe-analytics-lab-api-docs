{
  "swagger" : "2.0",
  "info" : {
    "version" : "v1 - Build: 2017-01-26_23:55:05.642",
    "title" : "Analytics Services APIs",
    "description" : "These are the Adobe Analytics APIs. To call the endpoints requires access to Adobe Analytics. For Questions: Contact Adobe for support.",
    "contact" : {
      "name" : "Adobe Analytics IO Team"
    }
  },
  "host" : "mc.adobe.io",
  "basePath" : "/mc/analytics/reporting",
  "tags" : [ {
    "name" : "calculatedmetrics"
  }, {
    "name" : "dimensions",
    "description" : "Dimensions service"
  }, {
    "name" : "mcassociations"
  }, {
    "name" : "mcconfigurations"
  }, {
    "name" : "metrics",
    "description" : "Retrieves a List of Metrics for the Given Report Suite"
  }, {
    "name" : "projects",
    "description" : "Retrieves a projects for the Given Report Suite"
  }, {
    "name" : "reports",
    "description" : "Ranked reports service"
  }, {
    "name" : "reportsuites",
    "description" : "Analytics Report Suite Service"
  }, {
    "name" : "segments",
    "description" : "Operations on segments"
  }, {
    "name" : "usergroups",
    "description" : "Operations on user groups"
  }, {
    "name" : "users",
    "description" : "Retrieves Lists of Users"
  } ],
  "schemes" : [ "https" ],
  "paths" : {
    "/calculatedmetrics" : {
      "get" : {
        "tags" : [ "calculatedmetrics" ],
        "summary" : "Retrieves paginated calculated metrics",
        "description" : "A calculated metric response will always include these default items: *id, name, description, rsid, owner* \n\nOther attributes can be optionally requested through the 'expansion' field:\n\n* *modified*: Date that the metric was last modified (ISO 8601)\n* *definition*: Calculated metric definition as JSON object\n* *compatibility*: Products that the metric is compatible with\n* *reportSuiteName*: Also return the friendly Report Suite name for the RSID\n* *favorite*: True if calculated metric has been marked as a 'Favorite'\n* *tags*: Gives all existing tags associated with the calculated metric\n* *approved*: True if calculated metric has been marked as 'Approved'\n* *shares*: Gives all existing shares for the calculated metric\n* *sharesFullName*: Give 'shares', but also include the shared-to user's friendly login name as 'shareToDisplayName' in each share object\n* *ownerFullName*: Add friendly full login name (string) to the 'owner' object\n\n",
        "operationId" : "calculatedmetrics_findCalculatedMetrics",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "expansion",
          "in" : "query",
          "description" : "Comma-delimited list of additional calculated metric metadata fields to include on response.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "reportSuiteName", "siteTitle", "ownerFullName", "modified", "migratedIds", "isDeleted", "approved", "favorite", "shares", "tags", "sharesFullName", "usageSummary", "usageSummaryWithRelevancyScore", "definition", "authorization", "compatibility", "legacyId", "internal", "dataGroup" ]
          },
          "collectionFormat" : "csv"
        }, {
          "name" : "includeType",
          "in" : "query",
          "description" : "Include additional calculated metrics not owned by user. The \"all\" option takes precedence over \"shared\"",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "all", "shared", "templates", "unauthorized", "deleted", "internal" ]
          },
          "collectionFormat" : "csv"
        }, {
          "name" : "rsids",
          "in" : "query",
          "description" : "Filter list to only include calculated metrics tied to specified RSID list (comma-delimited)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "dataType",
          "in" : "query",
          "description" : "Filter list to only include calculated metrics compatible with the specified product",
          "required" : false,
          "type" : "string",
          "enum" : [ "oberon", "frag", "marketing_channel" ]
        }, {
          "name" : "ownerId",
          "in" : "query",
          "description" : "Filter list to only include calculated metrics owned by the specified loginId",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "calculatedMetricFilter",
          "in" : "query",
          "description" : "Filter list to only include calculated metrics in the specified list (comma-delimited list of IDs)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "filterByIds",
          "in" : "query",
          "description" : "Filter list to only include calculated metrics in the specified list (comma-delimited list of IDs) (this is the same as calculatedMetricFilter, and is overwritten by calculatedMetricFilter",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "toBeUsedInRsid",
          "in" : "query",
          "description" : "The report suite where the calculated metric intended to be used.  This report suite will be used to determine things like compatibility and permissions.  If it is not specified then the permissions will be calculated based on the union of all metrics authorized in all groups the user belongs to.  If the compatibility expansion is specified and toBeUsedInRsid is not then the compatibility returned is based off the compatibility from the last time the calculated metric was saved.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "Locale",
          "required" : false,
          "type" : "string",
          "default" : "en_US"
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "Filter list to only include calculated metrics that contains the Name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "dataGroup",
          "in" : "query",
          "description" : "Filter list to only include calculated metrics with the given dataGroup",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "tagNames",
          "in" : "query",
          "description" : "Filter list to only include calculated metrics that contains one of the tags",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "favorite",
          "in" : "query",
          "description" : "Filter list to only include calculated metrics that are favorites",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "approved",
          "in" : "query",
          "description" : "Filter list to only include calculated metrics that are approved",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "pagination",
          "in" : "query",
          "description" : "return paginated results",
          "required" : false,
          "type" : "string",
          "default" : "false",
          "enum" : [ "true", "false" ]
        }, {
          "name" : "filterByModifiedAfter",
          "in" : "query",
          "description" : "Filter list to only include calculated metrics modified since this date (ISO8601 format)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "includeDeleted",
          "in" : "query",
          "description" : "DEPRECATED use deleted includeType - include disabled calculated metrics in results",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of results per page",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page number (base 0 - first page is \"0\")",
          "required" : false,
          "type" : "integer",
          "default" : 0
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/AnalyticsCalculatedMetric"
              }
            }
          },
          "400" : {
            "description" : "Unable to retrieve list of calculated metrics shared with user"
          },
          "401" : {
            "description" : "Owner filter error; user specified is not in the same company as the requesting user"
          },
          "403" : {
            "description" : "Requesting non-shared calculated metrics for other users is restricted to admin users"
          },
          "500" : {
            "description" : "External API error; Calculated metric retrieval failed"
          }
        }
      },
      "post" : {
        "tags" : [ "calculatedmetrics" ],
        "summary" : "Creates a new calculated metric",
        "description" : "Creates a new calculated metric. The following attributes are available when creating a calculated metric:\n\nIMPORTANT: Required Fields: name, definition, rsid\n\nOptional fields: description\n\nExample definition for use in testing API below (\"Page exists\"):\n\n```json\n\n{\"definition\":{},\"version\":[1,0,0]}\n```\n\nA calculated metric response will always include these default items:* id, name, description, rsid, owner* \n\nOther attributes can be optionally requested through the 'expansion' field as defined/documented in the GET endpoints (see GET \"/calculatedmetrics\" or GET \"/calculatedmetrics/{id}\" for more documentation).",
        "operationId" : "calculatedmetrics_createCalculatedMetric",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "expansion",
          "in" : "query",
          "description" : "Comma-delimited list of additional calculated metric metadata fields to include on response.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "reportSuiteName", "siteTitle", "ownerFullName", "modified", "migratedIds", "isDeleted", "approved", "favorite", "shares", "tags", "sharesFullName", "usageSummary", "usageSummaryWithRelevancyScore", "definition", "authorization", "compatibility", "legacyId", "internal", "dataGroup" ]
          },
          "collectionFormat" : "csv"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "JSON-formatted Object containing key/value pairs for calculated metric creation.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AnalyticsCalculatedMetric"
          }
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "Locale",
          "required" : false,
          "type" : "string",
          "default" : "en_US"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AnalyticsCalculatedMetric"
            }
          },
          "400" : {
            "description" : "Invalid input; name, rsid, and definition are all required. Definition must be formatted as a JSON Object."
          },
          "500" : {
            "description" : "External API error; Calculated metric create or retrieval failed"
          }
        }
      }
    },
    "/calculatedmetrics/functions" : {
      "get" : {
        "tags" : [ "calculatedmetrics" ],
        "summary" : "Retrieves all calculated metric functions",
        "description" : "",
        "operationId" : "calculatedmetrics_getCalculatedMetricFunctions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "locale",
          "in" : "query",
          "description" : "Locale",
          "required" : false,
          "type" : "string",
          "default" : "en_US"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          },
          "500" : {
            "description" : "External API error; Calculated metric functions retrieval failed"
          }
        }
      }
    },
    "/calculatedmetrics/functions/{id}" : {
      "get" : {
        "tags" : [ "calculatedmetrics" ],
        "summary" : "Retrieves a calculated metric function by id",
        "description" : "",
        "operationId" : "calculatedmetrics_getCalculatedMetricFunction",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The function ID to retrieve",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "Locale",
          "required" : false,
          "type" : "string",
          "default" : "en_US"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CalcMetricFunction"
            }
          },
          "404" : {
            "description" : "Calculated metric function not found"
          },
          "500" : {
            "description" : "External API error; Calculated metric function retrieval failed"
          }
        }
      }
    },
    "/calculatedmetrics/validate" : {
      "post" : {
        "tags" : [ "calculatedmetrics" ],
        "summary" : "Validates a calculated metric",
        "description" : "",
        "operationId" : "calculatedmetrics_validateCalculatedMetric",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "JSON-formatted Object containing key/value pairs for calculated metric validation.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AnalyticsCalculatedMetric"
          }
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "Locale",
          "required" : false,
          "type" : "string",
          "default" : "en_US"
        }, {
          "name" : "migrating",
          "in" : "query",
          "description" : "Include migration functions in validation",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AnalyticsCalculatedMetric"
            }
          },
          "400" : {
            "description" : "Invalid input; name, rsid, and definition are all required. Definition must be formatted as a JSON Object."
          },
          "500" : {
            "description" : "External API error; Calculated metric validation failed"
          }
        }
      }
    },
    "/calculatedmetrics/{id}" : {
      "get" : {
        "tags" : [ "calculatedmetrics" ],
        "summary" : "Retrieves a single calculated metric by ID",
        "description" : "A calculated metric response will always include these default items: *id, name, description, rsid, owner* \n\nOther attributes can be optionally requested through the 'expansion' field:\n\n* *modified*: Date that the metric was last modified (ISO 8601)\n* *definition*: Calculated metric definition as JSON object\n* *compatibility*: Products that the metric is compatible with\n* *reportSuiteName*: Also return the friendly Report Suite name for the RSID\n* *favorite*: True if calculated metric has been marked as a 'Favorite'\n* *tags*: Gives all existing tags associated with the calculated metric\n* *approved*: True if calculated metric has been marked as 'Approved'\n* *shares*: Gives all existing shares for the calculated metric\n* *sharesFullName*: Give 'shares', but also include the shared-to user's friendly login name as 'shareToDisplayName' in each share object\n* *ownerFullName*: Add friendly full login name (string) to the 'owner' object\n\n",
        "operationId" : "calculatedmetrics_findOneCalculatedMetric",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The calculated metric ID to retrieve",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "expansion",
          "in" : "query",
          "description" : "Comma-delimited list of additional calculated metric metadata fields to include on response.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "reportSuiteName", "siteTitle", "ownerFullName", "modified", "migratedIds", "isDeleted", "approved", "favorite", "shares", "tags", "sharesFullName", "usageSummary", "usageSummaryWithRelevancyScore", "definition", "authorization", "compatibility", "legacyId", "internal", "dataGroup" ]
          },
          "collectionFormat" : "csv"
        }, {
          "name" : "toBeUsedInRsid",
          "in" : "query",
          "description" : "The report suite where the calculated metric intended to be used. This report suite will be used to determine things like compatibility and permissions.  If it is not specified then the permissions will be calculated based on the union of all metrics authorized in all groups the user belongs to.  If the compatibility expansion is specified and toBeUsedInRsid is not then the compatibility returned is based off the compatibility from the last time the calculated metric was saved.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "Locale",
          "required" : false,
          "type" : "string",
          "default" : "en_US"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AnalyticsCalculatedMetric"
            }
          },
          "403" : {
            "description" : "Requesting non-shared calculated metrics for other users is restricted to admin users"
          },
          "500" : {
            "description" : "External API error; calculated metric retrieval failed"
          }
        }
      },
      "put" : {
        "tags" : [ "calculatedmetrics" ],
        "summary" : "Make changes or updates to an existing metric",
        "description" : "The following fields can be modified through this endpoint: <br><b>name, description, definition, owner, rsid</b>Example \"defintion\" for use in testing API below (\"Page exists\"):<br>\"definition\":{},\"version\":[1,0,0]}<br><br>Response will be the newly modified calculated metric object after the update request completes.<br><br><b><span style=\"text-decoration: underline;\">CalculatedMetricResponse</span></b><br>A calculated metric response will always include these default items:* id, name, description, rsid, owner* \n\nOther attributes can be optionally requested through the 'expansion' field as defined/documented in the GET endpoints (see GET \"/calculatedmetrics\" or GET \"/calculatedmetrics/{id}\" for more documentation).",
        "operationId" : "calculatedmetrics_updateCalculatedMetric",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "expansion",
          "in" : "query",
          "description" : "Comma-delimited list of additional calculated metric metadata fields to include on response.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "reportSuiteName", "siteTitle", "ownerFullName", "modified", "migratedIds", "isDeleted", "approved", "favorite", "shares", "tags", "sharesFullName", "usageSummary", "usageSummaryWithRelevancyScore", "definition", "authorization", "compatibility", "legacyId", "internal", "dataGroup" ]
          },
          "collectionFormat" : "csv"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Calculated Metric ID to be updated",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "JSON-formatted Object containing key/value pairs to be updated.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AnalyticsCalculatedMetric"
          }
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "Locale",
          "required" : false,
          "type" : "string",
          "default" : "en_US"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AnalyticsCalculatedMetric"
            }
          },
          "400" : {
            "description" : "Definition must be formatted as a JSON Object"
          },
          "401" : {
            "description" : "Company mismatch; calculated metric ownership can only be transferred within the same organization"
          },
          "403" : {
            "description" : "User does not have permission to update this calculated metric"
          },
          "500" : {
            "description" : "External API error; Calculated metric update or retrieval failed"
          }
        }
      },
      "delete" : {
        "tags" : [ "calculatedmetrics" ],
        "summary" : "Delete a calculated metric by ID",
        "description" : "",
        "operationId" : "calculatedmetrics_deleteCalculatedMetric",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The calculated metric ID to be deleted",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "Locale",
          "required" : false,
          "type" : "string",
          "default" : "en_US"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DeleteResponse"
            }
          },
          "500" : {
            "description" : "External API error; Calculated metric delete failed"
          }
        }
      }
    },
    "/dimensions" : {
      "get" : {
        "tags" : [ "dimensions" ],
        "summary" : "Returns a list of dimensions for the given report suite",
        "description" : "",
        "operationId" : "getDimensions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rsid",
          "in" : "query",
          "description" : "Rsid to retrieve dimensions for",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "Locale",
          "required" : false,
          "type" : "string",
          "default" : "en_US"
        }, {
          "name" : "support",
          "in" : "query",
          "description" : "Comma-delimited list of products to filter dimension list by.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "oberon", "dataWarehouse" ]
          },
          "collectionFormat" : "csv"
        }, {
          "name" : "segmentable",
          "in" : "query",
          "description" : "Filter the dimensions by if they are valid in a segment.",
          "required" : false,
          "type" : "boolean",
          "enum" : [ "true" ]
        }, {
          "name" : "reportable",
          "in" : "query",
          "description" : "Filter the dimensions by if they are valid in a report.",
          "required" : false,
          "type" : "boolean",
          "enum" : [ "true" ]
        }, {
          "name" : "showCaDefaults",
          "in" : "query",
          "description" : "Whether to content aware default variable attribute.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "useCache",
          "in" : "query",
          "description" : "Use caching for faster requests",
          "required" : false,
          "type" : "boolean",
          "default" : true
        }, {
          "name" : "expansion",
          "in" : "query",
          "description" : "Add extra metadata to items (comma-delimited list)",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "tags", "approved", "favorite", "usageSummary", "usageSummaryWithRelevancyScore", "hidden", "noAccess", "warning" ]
          },
          "collectionFormat" : "csv"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          },
          "400" : {
            "description" : "Invalid JSON input"
          },
          "401" : {
            "description" : "User does not have access to this report suite"
          },
          "500" : {
            "description" : "Unexpected internal server error"
          }
        }
      }
    },
    "/dimensions/values" : {
      "post" : {
        "tags" : [ "dimensions" ],
        "summary" : "Returns the names of the dimension items listed in the post body",
        "description" : "Given a dimension name and an itemId, this endpoint returns the text value for that itemId",
        "operationId" : "getDimensionValues",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rsid",
          "in" : "query",
          "description" : "RSID to retrieve dimension values for",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "Locale",
          "required" : false,
          "type" : "string",
          "default" : "en_US"
        }, {
          "name" : "allowRemoteLoad",
          "in" : "query",
          "description" : "Controls if Oberon should remote load data.  Default behavior is true with fallback to false if remote data does not exist",
          "required" : false,
          "type" : "string",
          "default" : "default",
          "enum" : [ "true", "false", "default" ]
        }, {
          "name" : "dateRange",
          "in" : "query",
          "description" : "Optionally supply the date range to retrieve Dimension values for (default is last 90 days). Example format: 2014-06-01/2014-06-30 (gives June 2014)",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Array of dimensionItem objects that each contain key-value pairs for \"dimension\" and \"itemId\"",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/DimensionItem"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/DimensionItem"
              }
            }
          },
          "400" : {
            "description" : "Invalid JSON input"
          },
          "403" : {
            "description" : "Insufficient access to perform operation"
          },
          "500" : {
            "description" : "Unexpected internal server error"
          }
        }
      }
    },
    "/dimensions/{id}" : {
      "get" : {
        "tags" : [ "dimensions" ],
        "summary" : "Returns a dimension for the given report suite",
        "description" : "",
        "operationId" : "getDimension",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the dimension to retrieve info for. Note ids are values like evar1 not variables/evar1",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "rsid",
          "in" : "query",
          "description" : "ID of desired report suite ie. sistr2",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "useCache",
          "in" : "query",
          "description" : "Use caching for faster requests",
          "required" : false,
          "type" : "boolean",
          "default" : true
        }, {
          "name" : "includeHidden",
          "in" : "query",
          "description" : "Whether to include variables that are hidden in the UI or that the user doesn't have permission to.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "Locale that system named dimensions should be returned in",
          "required" : false,
          "type" : "string",
          "default" : "en_US"
        }, {
          "name" : "expansion",
          "in" : "query",
          "description" : "Add extra metadata to items (comma-delimited list)",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "tags", "approved", "favorite", "usageSummary", "usageSummaryWithRelevancyScore", "hidden", "noAccess", "warning" ]
          },
          "collectionFormat" : "csv"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AnalyticsDimension"
            }
          },
          "401" : {
            "description" : "User Doesn't have sufficient priviliges"
          }
        }
      }
    },
    "/mcattribution/configure" : {
      "post" : {
        "tags" : [ "mcconfigurations" ],
        "summary" : "Configure marketing cloud attribution for a company",
        "description" : "",
        "operationId" : "configure",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "locale",
          "in" : "query",
          "description" : "Locale",
          "required" : false,
          "type" : "string",
          "default" : "en_US"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "JSON-formatted Object containing key/value pairs for marketing cloud attribution configuration.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/McAttributionConfig"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/McAttributionConfig"
            }
          }
        }
      }
    },
    "/metrics" : {
      "get" : {
        "tags" : [ "metrics" ],
        "summary" : "Returns a list of metrics for the given report suite",
        "description" : "This Returns the metrics list primarily for the Analytics product. The platform identity API Returns a list of all possible metrics for the supported systems. ",
        "operationId" : "getMetrics",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rsid",
          "in" : "query",
          "description" : "ID of desired report suite ie. sistr2",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "Locale that system named metrics should be returned in",
          "required" : false,
          "type" : "string",
          "default" : "en_US"
        }, {
          "name" : "support",
          "in" : "query",
          "description" : "Which platform that this metric can be used on.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "oberon", "dataWarehouse" ]
          },
          "collectionFormat" : "csv"
        }, {
          "name" : "segmentable",
          "in" : "query",
          "description" : "Filter the metrics by if they are valid in a segment.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "expansion",
          "in" : "query",
          "description" : "Add extra metadata to items (comma-delimited list)",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "tags", "approved", "favorite", "usageSummary", "usageSummaryWithRelevancyScore", "hidden", "noAccess", "warning" ]
          },
          "collectionFormat" : "csv"
        }, {
          "name" : "includeType",
          "in" : "query",
          "description" : "Include additional metrics. The \"builderOnly\" returns metrics which should be visible in builder (Calculated Metric builder and segment builder)",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "builderOnly" ]
          },
          "collectionFormat" : "csv"
        }, {
          "name" : "showMetricViews",
          "in" : "query",
          "description" : "Whether to show metric views. Children metrics will be hidden.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "showCaDefaults",
          "in" : "query",
          "description" : "Whether to content aware default variable attribute.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AnalyticsMetric"
            }
          },
          "401" : {
            "description" : "User Doesn't have sufficient priviliges"
          }
        }
      }
    },
    "/metrics/{id}" : {
      "get" : {
        "tags" : [ "metrics" ],
        "summary" : "Returns a metric for the given report suite",
        "description" : "",
        "operationId" : "getMetric",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the metric to retrieve info for to retrieve variables for. Note ids are values like pageviews, not metrics/pageviews",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "rsid",
          "in" : "query",
          "description" : "ID of desired report suite ie. sistr2",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "Locale that system named metrics should be returned in",
          "required" : false,
          "type" : "string",
          "default" : "en_US"
        }, {
          "name" : "includeHidden",
          "in" : "query",
          "description" : "Whether to include variables that are hidden in the UI or that the user doesn't have permission to.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "expansion",
          "in" : "query",
          "description" : "Add extra metadata to items (comma-delimited list)",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "tags", "approved", "favorite", "usageSummary", "usageSummaryWithRelevancyScore", "hidden", "noAccess", "warning" ]
          },
          "collectionFormat" : "csv"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AnalyticsMetric"
            }
          },
          "401" : {
            "description" : "User Doesn't have sufficient priviliges"
          }
        }
      }
    },
    "/projects" : {
      "get" : {
        "tags" : [ "projects" ],
        "summary" : "Returns a list of projects for the user",
        "description" : "This Returns the projects list primarily for the Analytics product. ",
        "operationId" : "getProjects",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "includeType",
          "in" : "query",
          "description" : "Include additional projects not owned by user. The \"all\" option takes precedence over \"shared\". If niether guided, or project is included, both types are returned",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "all", "shared", "guided", "project", "templates", "deleted", "internal" ]
          },
          "collectionFormat" : "csv"
        }, {
          "name" : "expansion",
          "in" : "query",
          "description" : "Comma-delimited list of additional project metadata fields to include on response.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "reportSuiteName", "siteTitle", "ownerFullName", "modified", "migratedIds", "isDeleted", "approved", "favorite", "shares", "tags", "sharesFullName", "usageSummary", "usageSummaryWithRelevancyScore", "definition", "internal" ]
          },
          "collectionFormat" : "csv"
        }, {
          "name" : "filterByIds",
          "in" : "query",
          "description" : "Filter list to only include projects in the specified list (comma-delimited list of IDs)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "includeDeleted",
          "in" : "query",
          "description" : "DEPRECATED use deleted includeType - Include disabled/deleted projects in the response. Note: also forces the 'isDeleted' expansion",
          "required" : false,
          "type" : "string",
          "default" : "false",
          "enum" : [ "true", "false" ]
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "Locale",
          "required" : false,
          "type" : "string",
          "default" : "en_US"
        }, {
          "name" : "pagination",
          "in" : "query",
          "description" : "return paginated results",
          "required" : false,
          "type" : "string",
          "default" : "false",
          "enum" : [ "true", "false" ]
        }, {
          "name" : "filterByModifiedAfter",
          "in" : "query",
          "description" : "Filter list to only include projects modified since this date (ISO8601 format)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ownerId",
          "in" : "query",
          "description" : "Filter list to only include projects owned by the specified loginId",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of results per page",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page number (base 0 - first page is \"0\")",
          "required" : false,
          "type" : "integer",
          "default" : 0
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Project"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "projects" ],
        "summary" : "Creates a single project.",
        "description" : "",
        "operationId" : "createProject",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "JSON-formatted Object containing project keys/value pairs to be updated.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Project"
          }
        }, {
          "name" : "expansion",
          "in" : "query",
          "description" : "Comma-delimited list of additional project metadata fields to include on response.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "reportSuiteName", "siteTitle", "ownerFullName", "modified", "migratedIds", "isDeleted", "approved", "favorite", "shares", "tags", "sharesFullName", "usageSummary", "usageSummaryWithRelevancyScore", "definition", "internal" ]
          },
          "collectionFormat" : "csv"
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "Locale",
          "required" : false,
          "type" : "string",
          "default" : "en_US"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Project"
            }
          }
        }
      }
    },
    "/projects/validate" : {
      "post" : {
        "tags" : [ "projects" ],
        "summary" : "Validates a Project definition",
        "description" : "",
        "operationId" : "validateProject",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "JSON-formatted Object containing key/value pairs for Project validation.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "default" : "{\n\"project\":\"...project...\",\n\"validator\":\"...validatorSchema...\"\n}"
          }
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "Locale",
          "required" : false,
          "type" : "string",
          "default" : "en_US"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ProjectCompatibility"
            }
          },
          "400" : {
            "description" : "Invalid input; definition is required. Definition must be formatted as a JSON Object."
          },
          "500" : {
            "description" : "External API error; Project validation failed"
          }
        }
      }
    },
    "/projects/{projectId}" : {
      "get" : {
        "tags" : [ "projects" ],
        "summary" : "Retrieves configuration for a Project.",
        "description" : "",
        "operationId" : "getProject",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "The Project id for which to retrieve information",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "expansion",
          "in" : "query",
          "description" : "Comma-delimited list of additional project metadata fields to include on response.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "reportSuiteName", "siteTitle", "ownerFullName", "modified", "migratedIds", "isDeleted", "approved", "favorite", "shares", "tags", "sharesFullName", "usageSummary", "usageSummaryWithRelevancyScore", "definition", "internal" ]
          },
          "collectionFormat" : "csv"
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "Locale",
          "required" : false,
          "type" : "string",
          "default" : "en_US"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Project"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "projects" ],
        "summary" : "Updates configuration for a project.",
        "description" : "",
        "operationId" : "updateProject",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "The Project id for which to retrieve information",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "expansion",
          "in" : "query",
          "description" : "Comma-delimited list of additional project metadata fields to include on response.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "reportSuiteName", "siteTitle", "ownerFullName", "modified", "migratedIds", "isDeleted", "approved", "favorite", "shares", "tags", "sharesFullName", "usageSummary", "usageSummaryWithRelevancyScore", "definition", "internal" ]
          },
          "collectionFormat" : "csv"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "JSON-formatted Object containing project keys/value pairs to be updated.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Project"
          }
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "Locale",
          "required" : false,
          "type" : "string",
          "default" : "en_US"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Project"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "projects" ],
        "summary" : "deletes a project.",
        "description" : "",
        "operationId" : "deleteProject",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "The Project id for which to retrieve information",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "Locale",
          "required" : false,
          "type" : "string",
          "default" : "en_US"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DeleteResponse"
            }
          }
        }
      }
    },
    "/reports/ranked" : {
      "post" : {
        "tags" : [ "reports" ],
        "summary" : "Runs a ranked report for the report in the post body",
        "description" : "See the [Reporting Interface wiki page](https://wiki.corp.adobe.com/display/scservices/Reporting+Interface) for details.",
        "operationId" : "runRankedReport",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "allowRemoteLoad",
          "in" : "query",
          "description" : "Controls if Oberon should remote load data.  Default behavior is true with fallback to false if remote data does not exist",
          "required" : false,
          "type" : "string",
          "default" : "default",
          "enum" : [ "true", "false", "default" ]
        }, {
          "name" : "useCache",
          "in" : "query",
          "description" : "Use caching for faster requests (Use cached dimensions to speed up permission checks - This does not do any report caching)",
          "required" : false,
          "type" : "boolean",
          "default" : true
        }, {
          "name" : "includeOberonXml",
          "in" : "query",
          "description" : "Controls if Oberon XML should be returned in the response - DEBUG ONLY",
          "required" : false,
          "type" : "boolean",
          "default" : false,
          "enum" : [ "true", "false" ]
        }, {
          "name" : "includePlatformPredictiveObjects",
          "in" : "query",
          "description" : "Controls if platform Predictive Objects should be returned in the response. Only available when using Anomaly Detection or Forecasting- DEBUG ONLY",
          "required" : false,
          "type" : "boolean",
          "default" : false,
          "enum" : [ "true", "false" ]
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RankedRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RankedReportData"
            }
          }
        }
      }
    },
    "/reportsuites" : {
      "get" : {
        "tags" : [ "reportsuites" ],
        "summary" : "Retrieves report suites that match the given filters.",
        "description" : "",
        "operationId" : "findAll",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "includeType",
          "in" : "query",
          "description" : "Include report suites with the following parameters in the return list.  Including blocked requires a single companyId in the companyIds query param",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "blocked" ]
          },
          "collectionFormat" : "csv"
        }, {
          "name" : "expansion",
          "in" : "query",
          "description" : "Comma-delimited list of additional project metadata fields to include on response.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "advancedSettings", "tnt", "calendarType", "reportSuiteName", "type", "active", "baseUrl", "defaultPage", "currency", "calendarAnchorDate", "timezone", "axleConfig", "currentTimezoneOffset", "numGroups", "isBlocked", "discoverUiEnabled", "mcAssociations", "mcAudiences", "mcEstimatedClusters", "imsOrgIdsFromRelatedCompanies", "relatedCompanies", "timezoneZoneinfo", "dataCurrentAsOf", "enabledSolutions", "billingCustomerId" ]
          },
          "collectionFormat" : "csv"
        }, {
          "name" : "permission",
          "in" : "query",
          "description" : "Filter list to only include suites that have this permission.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "rsids",
          "in" : "query",
          "description" : "Filter list to only include suites in this RSID list (comma-delimited)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "mcAssociations",
          "in" : "query",
          "description" : "Filter list to include or exclude suites that have MC Associations.",
          "required" : false,
          "type" : "string",
          "enum" : [ "include", "exclude" ]
        }, {
          "name" : "mcAudiences",
          "in" : "query",
          "description" : "Filter list to include or exclude suites that are configured for MC Audiences.",
          "required" : false,
          "type" : "string",
          "enum" : [ "include", "exclude" ]
        }, {
          "name" : "relevantOnly",
          "in" : "query",
          "description" : "Return only report suites that are considered recent.",
          "required" : false,
          "type" : "string",
          "default" : "false",
          "enum" : [ "true", "false" ]
        }, {
          "name" : "cached",
          "in" : "query",
          "description" : "return cached results",
          "required" : false,
          "type" : "string",
          "default" : "true",
          "enum" : [ "true", "false" ]
        }, {
          "name" : "types",
          "in" : "query",
          "description" : "Comma-delimited list of types of report suites to return.  No selection returns all types.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "base", "asi", "rollup" ]
          },
          "collectionFormat" : "csv"
        }, {
          "name" : "rsidContains",
          "in" : "query",
          "description" : "Filter list to only include suites whose rsid contains rsidContains.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "rsidOrNameContains",
          "in" : "query",
          "description" : "Filter list to only include suites whose rsid or report suite name contains rsidOrNameContains.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "mcAssociatedImsOrgId",
          "in" : "query",
          "description" : "Filter list to only include suites that are associated with the IMS Org ID specified in mcAssociatedImsOrgId",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyName",
          "in" : "query",
          "description" : "Filter list to only include suites associated to the company with this companyName.  This parameter is only allowed with service tokens.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "enabledSolutions",
          "in" : "query",
          "description" : "Filter reportsuites by enabled solutions. Comma deliminated list of solution names",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of results per page",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page number (base 0 - first page is \"0\")",
          "required" : false,
          "type" : "integer",
          "default" : 0
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ReportSuite"
            }
          },
          "500" : {
            "description" : "Unexpected error; report suite retrieval failed"
          }
        }
      }
    },
    "/reportsuites/mcassociations" : {
      "get" : {
        "tags" : [ "mcassociations" ],
        "summary" : "Retrieve RSID by data source Id",
        "description" : "",
        "operationId" : "find",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "dataSourceId",
          "in" : "query",
          "description" : "data source id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of results per page",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page number (base 0 - first page is \"0\")",
          "required" : false,
          "type" : "integer",
          "default" : 0
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/McAssociation"
            }
          },
          "400" : {
            "description" : "Internal error while fetching mcassociation",
            "schema" : {
              "$ref" : "#/definitions/ServiceException"
            }
          }
        }
      }
    },
    "/reportsuites/mcassociations/batch" : {
      "put" : {
        "tags" : [ "mcassociations" ],
        "summary" : "Batch endpoint to notify analytics that multiple mcAssociations have been created ",
        "description" : "This endpoint allows you to notify analytics that multiple reportsuites have been associated with IMS Organizations",
        "operationId" : "updateMultipleMcAssociations",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "a list of mcAssociation objects",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/McAssociation"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/McAssociation"
            }
          },
          "207" : {
            "description" : "Multiple status"
          },
          "403" : {
            "description" : "Insufficient access to set batch associations, i.e. the user does not belong to the company owning the rsid or is not an admin",
            "schema" : {
              "$ref" : "#/definitions/ServiceErrorStatus"
            }
          },
          "500" : {
            "description" : "Internal error while executing the request, it is unknown what associations were successful",
            "schema" : {
              "$ref" : "#/definitions/ServiceErrorStatus"
            }
          }
        }
      }
    },
    "/reportsuites/mcconfigurations/estimatedclusters/batch" : {
      "put" : {
        "tags" : [ "mcconfigurations" ],
        "summary" : "Sets the EstimatedClusters McConfiguration object for the rsid.",
        "description" : "",
        "operationId" : "setMultipleEstimatedClustersConfig",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "list of EstimatedClusters configuration objects",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/BatchMcEstimatedClusters"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK successfully set EstimatedClusters object",
            "schema" : {
              "$ref" : "#/definitions/McEstimatedClusters"
            }
          },
          "403" : {
            "description" : "Insufficient access to data, i.e. the user does not belong to the company owning the rsid",
            "schema" : {
              "$ref" : "#/definitions/ServiceErrorStatus"
            }
          },
          "500" : {
            "description" : "Unexpected error; update of EstimatedClusters failed due to an internal error",
            "schema" : {
              "$ref" : "#/definitions/ServiceErrorStatus"
            }
          }
        }
      }
    },
    "/reportsuites/{rsid}" : {
      "get" : {
        "tags" : [ "reportsuites" ],
        "summary" : "Retrieves report suite information for a single report suite.",
        "description" : "",
        "operationId" : "findOne",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rsid",
          "in" : "path",
          "description" : "The rsid of the suite to return",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "expansion",
          "in" : "query",
          "description" : "Comma-delimited list of additional attributes to include on response.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "advancedSettings", "tnt", "calendarType", "reportSuiteName", "type", "active", "baseUrl", "defaultPage", "currency", "calendarAnchorDate", "timezone", "axleConfig", "currentTimezoneOffset", "numGroups", "isBlocked", "discoverUiEnabled", "mcAssociations", "mcAudiences", "mcEstimatedClusters", "imsOrgIdsFromRelatedCompanies", "relatedCompanies", "timezoneZoneinfo", "dataCurrentAsOf", "enabledSolutions", "billingCustomerId" ]
          },
          "collectionFormat" : "csv"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ReportSuite"
            }
          },
          "500" : {
            "description" : "Unexpected error; report suite retrieval failed"
          }
        }
      },
      "put" : {
        "tags" : [ "reportsuites" ],
        "summary" : "Updates report suite settings for the passed RSID.",
        "description" : "Only accepts pre-defined fields that are designated as editable; see sample JSON for field list",
        "operationId" : "updateReportSuite",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rsid",
          "in" : "path",
          "description" : "The rsid to be updated",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "expansion",
          "in" : "query",
          "description" : "Comma-delimited list of additional attributes to include on response.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "advancedSettings", "tnt", "calendarType", "reportSuiteName", "type", "active", "baseUrl", "defaultPage", "currency", "calendarAnchorDate", "timezone", "axleConfig", "currentTimezoneOffset", "numGroups", "isBlocked", "discoverUiEnabled", "mcAssociations", "mcAudiences", "mcEstimatedClusters", "imsOrgIdsFromRelatedCompanies", "relatedCompanies", "timezoneZoneinfo", "dataCurrentAsOf", "enabledSolutions", "billingCustomerId" ]
          },
          "collectionFormat" : "csv"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "JSON-formatted Object containing key/value pairs to be updated.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ReportSuite"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ReportSuite"
            }
          },
          "500" : {
            "description" : "Unexpected error; update of reportsuite failed due to an internal error"
          }
        }
      }
    },
    "/reportsuites/{rsid}/cacheReset" : {
      "get" : {
        "tags" : [ "reportsuites" ],
        "summary" : "DEPRECATED - we will be removing this end point in the near future - use /collections/suites/cacheReset instead",
        "description" : "",
        "operationId" : "resetCache",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rsid",
          "in" : "path",
          "description" : "RSID to reset caches for",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      }
    },
    "/reportsuites/{rsid}/calendartype" : {
      "get" : {
        "tags" : [ "reportsuites" ],
        "summary" : "Retrieves calendar type for a single report suite.",
        "description" : "",
        "operationId" : "findCalendarType",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rsid",
          "in" : "path",
          "description" : "rsid",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CalendarType"
            }
          },
          "500" : {
            "description" : "Unexpected error; retrieval of segment publishing configuration failed due to an internal error"
          }
        }
      }
    },
    "/reportsuites/{rsid}/mcassociations" : {
      "get" : {
        "tags" : [ "mcassociations" ],
        "summary" : "Get marketing cloud association for the rsid",
        "description" : "",
        "operationId" : "getMcAssociationsForRsid",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rsid",
          "in" : "path",
          "description" : "the report suite id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/McAssociation"
            }
          },
          "500" : {
            "description" : "Internal error while fetching mcassociation",
            "schema" : {
              "$ref" : "#/definitions/ServiceErrorStatus"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "mcassociations" ],
        "summary" : "Notify Analytics that a report suite has been mcAssociated",
        "description" : "This endpoint notifies Analytics that a report suite has been associated with an IMS Organization.  It will not override existing marketing cloud associations, if an existing value is found a 403 error will be returned. The client must remove the association first and then set it with the new value.",
        "operationId" : "updateMcAssociationsForRsid",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rsid",
          "in" : "path",
          "description" : "the report suite id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Mapping Info data",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/McAssociation"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/McAssociation"
            }
          },
          "403" : {
            "description" : "Cannot override exisitng value",
            "schema" : {
              "$ref" : "#/definitions/ServiceErrorStatus"
            }
          },
          "500" : {
            "description" : "Internal error while setting mcassociation",
            "schema" : {
              "$ref" : "#/definitions/ServiceErrorStatus"
            }
          }
        }
      }
    },
    "/reportsuites/{rsid}/mcconfigurations/estimatedclusters" : {
      "get" : {
        "tags" : [ "mcconfigurations" ],
        "summary" : "Returns the EstimatedCluster McConfiguration object for the rsid.",
        "description" : "NOTE: estimatedclusters is the working title for this endpoint, this will change",
        "operationId" : "getEstimatedClusterConfig",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rsid",
          "in" : "path",
          "description" : "the report suite id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "expansion",
          "in" : "query",
          "description" : "Comma-delimited list of additional attributes to include on response.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "mcAssociations" ]
          },
          "collectionFormat" : "csv"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/McEstimatedClusters"
            }
          },
          "403" : {
            "description" : "Insufficient access to data, i.e. the user does not belong to the company owning the rsid",
            "schema" : {
              "$ref" : "#/definitions/ServiceErrorStatus"
            }
          },
          "404" : {
            "description" : "The association for EstimatedClusters was not found, it has not been created or was deleted.",
            "schema" : {
              "$ref" : "#/definitions/ServiceErrorStatus"
            }
          },
          "500" : {
            "description" : "Unexpected error; Fetch of EstimatedClusters failed due to an internal error",
            "schema" : {
              "$ref" : "#/definitions/ServiceErrorStatus"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "mcconfigurations" ],
        "summary" : "Sets the EstimatedClusters McConfiguration object for the rsid.",
        "description" : "",
        "operationId" : "setEstimatedClustersConfig",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rsid",
          "in" : "path",
          "description" : "the report suite id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "the EstimatedClusters configuration object",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/McEstimatedClusters"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK successfully set EstimatedClusters object",
            "schema" : {
              "$ref" : "#/definitions/McEstimatedClusters"
            }
          },
          "403" : {
            "description" : "Insufficient access to data, i.e. the user does not belong to the company owning the rsid",
            "schema" : {
              "$ref" : "#/definitions/ServiceErrorStatus"
            }
          },
          "500" : {
            "description" : "Unexpected error; update of EstimatedClusters failed due to an internal error",
            "schema" : {
              "$ref" : "#/definitions/ServiceErrorStatus"
            }
          }
        }
      }
    },
    "/reportsuites/{rsid}/mcconfigurations/mcaudiences" : {
      "get" : {
        "tags" : [ "mcconfigurations" ],
        "summary" : "Get the McAudiences McConfiguration object for the rsid.",
        "description" : "",
        "operationId" : "getMcAudiencesConfig",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rsid",
          "in" : "path",
          "description" : "the report suite id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/McAudiences"
            }
          },
          "403" : {
            "description" : "Insufficient access to retrive the mc audiences configuration",
            "schema" : {
              "$ref" : "#/definitions/ServiceErrorStatus"
            }
          },
          "404" : {
            "description" : "invalid rsid.",
            "schema" : {
              "$ref" : "#/definitions/ServiceErrorStatus"
            }
          },
          "500" : {
            "description" : "Unexpected error; retrieval of mc audiences configuration failed due to an internal error",
            "schema" : {
              "$ref" : "#/definitions/ServiceErrorStatus"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "mcconfigurations" ],
        "summary" : "Sets the McAudiences McConfiguration object for the given report suite.",
        "description" : "",
        "operationId" : "setMcAudiencesConfig",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rsid",
          "in" : "path",
          "description" : "the report suite id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "the McAudiences configuration object",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/McAudiences"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK successfully set McAudiences object",
            "schema" : {
              "$ref" : "#/definitions/McAudiences"
            }
          },
          "403" : {
            "description" : "Insufficient access to retrive the mc audiences configuration",
            "schema" : {
              "$ref" : "#/definitions/ServiceErrorStatus"
            }
          },
          "404" : {
            "description" : "invalid rsid.",
            "schema" : {
              "$ref" : "#/definitions/ServiceErrorStatus"
            }
          },
          "500" : {
            "description" : "Unexpected error; update of mc audiences configuration failed due to an internal error",
            "schema" : {
              "$ref" : "#/definitions/ServiceErrorStatus"
            }
          }
        }
      }
    },
    "/reportsuites/{rsid}/segmentpublishing" : {
      "get" : {
        "tags" : [ "reportsuites" ],
        "summary" : "Retrieves the specified report suite's segment publishing configuration for the user's company.",
        "description" : "",
        "operationId" : "findSegmentPublishingConfig",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rsid",
          "in" : "path",
          "description" : "The rsid to retrieve segment publishing configuration for",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SegmentPublishingConfig"
            }
          },
          "500" : {
            "description" : "Unexpected error; retrieval of segment publishing configuration failed due to an internal error"
          }
        }
      },
      "post" : {
        "tags" : [ "reportsuites" ],
        "summary" : "Creates a report suite segment publishing configuration for the user's company.",
        "description" : "",
        "operationId" : "createSegmentPublishingInfo",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rsid",
          "in" : "path",
          "description" : "The rsid to create a segment publishing configuration for",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "JSON-formatted Object containing key/value pairs to be updated.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/SegmentPublishingConfig"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SegmentPublishingConfig"
            }
          },
          "500" : {
            "description" : "Unexpected error; update of segment publishing configuration failed due to an internal error"
          }
        }
      },
      "put" : {
        "tags" : [ "reportsuites" ],
        "summary" : "Updates a report suite's segment publishing configuration for the user's company.",
        "description" : "",
        "operationId" : "updateSegmentPublishingInfo",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rsid",
          "in" : "path",
          "description" : "The rsid of the suite to update segment publishing configuration for",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "JSON-formatted Object containing key/value pairs to be updated.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/SegmentPublishingConfig"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SegmentPublishingConfig"
            }
          },
          "500" : {
            "description" : "Unexpected error; update of segment publishing configuration failed due to an internal error"
          }
        }
      },
      "delete" : {
        "tags" : [ "reportsuites" ],
        "summary" : "Deletes a report suite's segment publishing configuration for the user's company.",
        "description" : "",
        "operationId" : "deleteSegmentPublisingConfig",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rsid",
          "in" : "path",
          "description" : "The rsid or numericRsid of the suite to return",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SegmentPublishingConfig"
            }
          },
          "500" : {
            "description" : "Unexpected error; delete of segment publishing configuration failed due to an internal error"
          }
        }
      }
    },
    "/reportsuites/{rsid}/tnt" : {
      "get" : {
        "tags" : [ "reportsuites" ],
        "summary" : "Retrieves the TNT configuration for a single report suite.",
        "description" : "tntExpireType values:<br>&nbsp&nbsp&nbsp&nbsp&nbsp0  = Visit<br>&nbsp&nbsp&nbsp&nbsp&nbsp1  = Page View<br>&nbsp&nbsp&nbsp&nbsp&nbsp2  = Never<br>&nbsp&nbsp&nbsp&nbsp&nbsp3  = Minute<br>&nbsp&nbsp&nbsp&nbsp&nbsp4  = Hour<br>&nbsp&nbsp&nbsp&nbsp&nbsp5  = Day<br>&nbsp&nbsp&nbsp&nbsp&nbsp6  = Week<br>&nbsp&nbsp&nbsp&nbsp&nbsp7  = Month<br>&nbsp&nbsp&nbsp&nbsp&nbsp8  = Quarter<br>&nbsp&nbsp&nbsp&nbsp&nbsp9  = Year<br>&nbsp&nbsp&nbsp&nbsp&nbsp10 = Purchase<br>&nbsp&nbsp&nbsp&nbsp&nbsp11 = Product View<br>&nbsp&nbsp&nbsp&nbsp&nbsp12 = Cart Open<br>&nbsp&nbsp&nbsp&nbsp&nbsp13 = Cart Checkout<br>&nbsp&nbsp&nbsp&nbsp&nbsp14 = Cart Add<br>&nbsp&nbsp&nbsp&nbsp&nbsp15 = Cart Remove<br>&nbsp&nbsp&nbsp&nbsp&nbsp16 = Cart View<br>&nbsp&nbsp&nbsp&nbsp&nbsp17 = event1<br>&nbsp&nbsp&nbsp&nbsp&nbsp18 = event2<br>&nbsp&nbsp&nbsp&nbsp&nbsp19 = event3<br>&nbsp&nbsp&nbsp&nbsp&nbspetc...<br>&nbsp&nbsp&nbsp&nbsp&nbsp116 = event100<br>&nbsp&nbsp&nbsp&nbsp&nbsp<br>tntAllocationType values:<br>&nbsp&nbsp&nbsp&nbsp&nbsp0 = Full<br>&nbsp&nbsp&nbsp&nbsp&nbsp1 = Linear",
        "operationId" : "getTntConfig",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rsid",
          "in" : "path",
          "description" : "The rsid of the suite to retrieve TNT configuration for",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TntConfig"
            }
          },
          "500" : {
            "description" : "Unexpected error; retrieving TNT configuration failed due to an internal error"
          }
        }
      },
      "put" : {
        "tags" : [ "reportsuites" ],
        "summary" : "Updates the tnt configuration for a single report suite.",
        "description" : "tntExpireType values:<br>&nbsp&nbsp&nbsp&nbsp&nbsp0  = Visit<br>&nbsp&nbsp&nbsp&nbsp&nbsp1  = Page View<br>&nbsp&nbsp&nbsp&nbsp&nbsp2  = Never<br>&nbsp&nbsp&nbsp&nbsp&nbsp3  = Minute<br>&nbsp&nbsp&nbsp&nbsp&nbsp4  = Hour<br>&nbsp&nbsp&nbsp&nbsp&nbsp5  = Day<br>&nbsp&nbsp&nbsp&nbsp&nbsp6  = Week<br>&nbsp&nbsp&nbsp&nbsp&nbsp7  = Month<br>&nbsp&nbsp&nbsp&nbsp&nbsp8  = Quarter<br>&nbsp&nbsp&nbsp&nbsp&nbsp9  = Year<br>&nbsp&nbsp&nbsp&nbsp&nbsp10 = Purchase<br>&nbsp&nbsp&nbsp&nbsp&nbsp11 = Product View<br>&nbsp&nbsp&nbsp&nbsp&nbsp12 = Cart Open<br>&nbsp&nbsp&nbsp&nbsp&nbsp13 = Cart Checkout<br>&nbsp&nbsp&nbsp&nbsp&nbsp14 = Cart Add<br>&nbsp&nbsp&nbsp&nbsp&nbsp15 = Cart Remove<br>&nbsp&nbsp&nbsp&nbsp&nbsp16 = Cart View<br>&nbsp&nbsp&nbsp&nbsp&nbsp17 = event1<br>&nbsp&nbsp&nbsp&nbsp&nbsp18 = event2<br>&nbsp&nbsp&nbsp&nbsp&nbsp19 = event3<br>&nbsp&nbsp&nbsp&nbsp&nbspetc...<br>&nbsp&nbsp&nbsp&nbsp&nbsp116 = event100<br>&nbsp&nbsp&nbsp&nbsp&nbsp<br>tntAllocationType values:<br>&nbsp&nbsp&nbsp&nbsp&nbsp0 = Full<br>&nbsp&nbsp&nbsp&nbsp&nbsp1 = Linear",
        "operationId" : "updateTntConfig",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rsid",
          "in" : "path",
          "description" : "The rsid of the suite to update tnt configuration for",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "JSON-formatted Object containing key/value pairs to be updated.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/TntConfig"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TntConfig"
            }
          },
          "500" : {
            "description" : "Unexpected error; update of tnt configuration failed due to an internal error"
          }
        }
      }
    },
    "/segments" : {
      "get" : {
        "tags" : [ "segments" ],
        "summary" : "Retrieves all segments, or paginated segments",
        "description" : "A segment response will always include these default items:<br><b>id,name,description,rsid,owner</b><br><br>Other attributes can be optionally requested through the 'expansion' field: <br><b>modified</b>: Date that the segment was last modified (ISO 8601)<br><b>definition</b>: Segment definition as JSON object<br><b>compatibility</b>: Products that the segment is compatible with<br><b>reportSuiteName</b>: Also return the friendly Report Suite name for the RSID<br><b>legacyId</b>: Legacy segment ID from old segment database (only exists if the segment was migrated from the old segment DB)<br><b>dwInUse</b>: True if the segment is currently in use in a DW request<br><b>asiInUse</b>: True if the segment is currently in use in an ASI slot<br><b>aamStatus</b>: Returns AAM/Raven publishing status (cross-product segment sharing)<br><b>favorite</b>: True if segment has been marked as a 'Favorite'<br><b>tags</b>: Gives all existing tags associated with the segment<br><b>approved</b>: True if segment has been marked as 'Approved'<br><b>shares</b>: Gives all existing shares for the segment<br><b>sharesFullName</b>: Give 'shares', but also include the shared-to user's friendly login name as 'shareToDisplayName' in each share object<br><b>ownerFullName</b>: Add friendly full login name (string) to the 'owner' object<br><b>isDeleted</b>: Returns whether or not the segment is 'Deleted' (note that deleted segments are only returned if requested by ID)",
        "operationId" : "findAll",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "expansion",
          "in" : "query",
          "description" : "Comma-delimited list of additional segment metadata fields to include on response.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "reportSuiteName", "siteTitle", "ownerFullName", "modified", "migratedIds", "isDeleted", "approved", "favorite", "shares", "tags", "sharesFullName", "usageSummary", "usageSummaryWithRelevancyScore", "legacyId", "compatibility", "definition", "internal", "dataGroup" ]
          },
          "collectionFormat" : "csv"
        }, {
          "name" : "includeType",
          "in" : "query",
          "description" : "Include additional segments not owned by user. The \"all\" option takes precedence over \"shared\"",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "shared", "all", "templates", "deleted", "internal" ]
          },
          "collectionFormat" : "csv"
        }, {
          "name" : "rsids",
          "in" : "query",
          "description" : "Filter list to only include segments tied to specified RSID list (comma-delimited)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "dataType",
          "in" : "query",
          "description" : "Filter list to only include segments compatible with the specified product",
          "required" : false,
          "type" : "string",
          "enum" : [ "dw", "oberon" ]
        }, {
          "name" : "ownerId",
          "in" : "query",
          "description" : "Filter list to only include segments owned by the specified loginId",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "segmentFilter",
          "in" : "query",
          "description" : "Filter list to only include segments in the specified list (comma-delimited list of IDs)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "filterByIds",
          "in" : "query",
          "description" : "Filter list to only include segments in the specified list (comma-delimited list of IDs) (this is the same as segmentFilter, and is overwritten by segmentFilter",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "includeDeleted",
          "in" : "query",
          "description" : "DEPRECATED use deleted includeType - Include disabled/deleted segments in the response. Note: also forces the 'isDeleted' expansion",
          "required" : false,
          "type" : "string",
          "default" : "false",
          "enum" : [ "true", "false" ]
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "Locale",
          "required" : false,
          "type" : "string",
          "default" : "en_US"
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "Filter list to only include segments that contains the Name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "tagNames",
          "in" : "query",
          "description" : "Filter list to only include segments that contains one of the tags",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "filterByModifiedAfter",
          "in" : "query",
          "description" : "Filter list to only include segments modified since this date (ISO8601 format)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pagination",
          "in" : "query",
          "description" : "return paginated results",
          "required" : false,
          "type" : "string",
          "default" : "false",
          "enum" : [ "true", "false" ]
        }, {
          "name" : "dataGroup",
          "in" : "query",
          "description" : "Filter list to only include segments with the given data group",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of results per page",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page number (base 0 - first page is \"0\")",
          "required" : false,
          "type" : "integer",
          "default" : 0
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AnalyticsSegmentResponseItem"
            }
          },
          "400" : {
            "description" : "Unable to retrieve list of segments shared with user"
          },
          "401" : {
            "description" : "Owner filter error; user specified is not in the same company as the requesting user"
          },
          "403" : {
            "description" : "Requesting non-shared segments for other users is restricted to admin users"
          },
          "500" : {
            "description" : "External API error; Segment retrieval failed"
          }
        }
      },
      "post" : {
        "tags" : [ "segments" ],
        "summary" : "Creates a new segment",
        "description" : "Creates a new segment. The following attributes are available when creating a segment:<br><b>Required: name, definition, rsid</b><br>Optional: description, aamStatus<br><br>Note: \"aamStatus\" is used to \"publish\" a report suite segment to other products in the Marketing Cloud. Description is always required when publishing with aamStatus. The report suite must already be pre-configured for AAM for publishing to succeed (see the \"/segments/aamStatus/\" endpoint for more information). <br>Format for aamStatus object:<br>\"aamStatus\":{\"published\":[\"rsid1\",\"rsid2\"]}<br><br>Example definition for use in testing API below (\"Page exists\"):<br>\"definition\":{\"func\":\"segment\",\"container\":{\"func\":\"container\",\"context\":\"hits\",\"pred\":{\"func\":\"exists\",\"description\":\"Page\",\"val\":{\"func\":\"attr\",\"name\":\"variables/page\"}}},\"version\":[1,0,0]}<br><br><b><span style=\"text-decoration: underline;\">SegmentResponse</span></b><br>A segment response will always include these default items:<br><b>id, name, description, rsid, owner</b><br>Other attributes can be optionally requested through the 'expansion' field as defined/documented in the GET endpoints (see GET \"/segments\" or GET \"/segments/{id}\" for more documentation).",
        "operationId" : "createSegment",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "expansion",
          "in" : "query",
          "description" : "Comma-delimited list of additional segment metadata fields to include on response.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "reportSuiteName", "siteTitle", "ownerFullName", "modified", "migratedIds", "isDeleted", "approved", "favorite", "shares", "tags", "sharesFullName", "usageSummary", "usageSummaryWithRelevancyScore", "dwInUse", "asiInUse", "aamStatus", "legacyId", "compatibility", "definition", "internal", "dataGroup", "virtualReportSuites" ]
          },
          "collectionFormat" : "csv"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "JSON-formatted Object containing key/value pairs for segment creation.",
          "required" : false,
          "schema" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          }
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "Locale",
          "required" : false,
          "type" : "string",
          "default" : "en_US"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AnalyticsSegmentResponseItem"
            }
          },
          "400" : {
            "description" : "Invalid input; name, rsid, and definition are all required. Definition must be formatted as a JSON Object."
          },
          "500" : {
            "description" : "External API error; Segment create or retrieval failed"
          }
        }
      },
      "put" : {
        "tags" : [ "segments" ],
        "summary" : "INTERNAL BULK MIGRATION ONLY: Creates many segments for the same user",
        "description" : "",
        "operationId" : "createSegments",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/segments/aamstatus" : {
      "get" : {
        "tags" : [ "segments" ],
        "summary" : "Checks the passed report suite to see if it is configured to allow segment sharing",
        "description" : "",
        "operationId" : "checkAamConfigured",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rsid",
          "in" : "query",
          "description" : "RSID to check status for",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object"
            }
          },
          "500" : {
            "description" : "External API error; failed to check status for given RSID"
          }
        }
      }
    },
    "/segments/migrate" : {
      "post" : {
        "tags" : [ "segments" ],
        "summary" : "Migrates a segment from account_segment to the new segment service",
        "description" : "",
        "operationId" : "migrateSegment",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JSONObject"
            }
          }
        }
      }
    },
    "/segments/validate" : {
      "post" : {
        "tags" : [ "segments" ],
        "summary" : "Returns a segment validation for the segment contained in the post body of the report.",
        "description" : "Requires rsid and definition. Used to validate a segment definition. <br><br>The response contains products that the definition is compatible with.<br><br>Example definition for use in testing API below (\"Page exists\"):<br>{\"func\":\"segment\",\"container\":{\"func\":\"container\",\"context\":\"hits\",\"pred\":{\"func\":\"exists\",\"description\":\"Page\",\"val\":{\"func\":\"attr\",\"name\":\"variables/page\"}}},\"version\":[1,0,0]}",
        "operationId" : "validateSegment",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "rsid",
          "in" : "query",
          "description" : "RSID to run the report against",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Segment definition",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SegmentCompatibility"
            }
          },
          "400" : {
            "description" : "Bad JSON input; request not formatted correctly"
          },
          "500" : {
            "description" : "Unexpected error;"
          }
        }
      }
    },
    "/segments/{id}" : {
      "get" : {
        "tags" : [ "segments" ],
        "summary" : "Retrieves a single segment by ID",
        "description" : "A segment response will always include these default items:<br><b>id,name,description,rsid,owner</b><br><br>Other attributes can be optionally requested through the 'expansion' field: <br><b>modified</b>: Date that the segment was last modified (ISO 8601)<br><b>definition</b>: Segment definition as JSON object<br><b>compatibility</b>: Products that the segment is compatible with<br><b>reportSuiteName</b>: Also return the friendly Report Suite name for the RSID<br><b>legacyId</b>: Legacy segment ID from old segment database (only exists if the segment was migrated from the old segment DB)<br><b>dwInUse</b>: True if the segment is currently in use in a DW request<br><b>asiInUse</b>: True if the segment is currently in use in an ASI slot<br><b>aamStatus</b>: Returns AAM/Raven publishing status (cross-product segment sharing)<br><b>favorite</b>: True if segment has been marked as a 'Favorite'<br><b>tags</b>: Gives all existing tags associated with the segment<br><b>approved</b>: True if segment has been marked as 'Approved'<br><b>shares</b>: Gives all existing shares for the segment<br><b>sharesFullName</b>: Give 'shares', but also include the shared-to user's friendly login name as 'shareToDisplayName' in each share object<br><b>ownerFullName</b>: Add friendly full login name (string) to the 'owner' object<br><b>isDeleted</b>: Returns whether or not the segment is 'Deleted' (note that deleted segments are only returned if requested by ID)",
        "operationId" : "findOne",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The segment ID to retrieve",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "expansion",
          "in" : "query",
          "description" : "Comma-delimited list of additional segment metadata fields to include on response.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "reportSuiteName", "siteTitle", "ownerFullName", "modified", "migratedIds", "isDeleted", "approved", "favorite", "shares", "tags", "sharesFullName", "usageSummary", "usageSummaryWithRelevancyScore", "dwInUse", "asiInUse", "aamStatus", "legacyId", "compatibility", "definition", "internal", "dataGroup", "virtualReportSuites" ]
          },
          "collectionFormat" : "csv"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AnalyticsSegmentResponseItem"
            }
          },
          "403" : {
            "description" : "Requesting non-shared segments for other users is restricted to admin users"
          },
          "500" : {
            "description" : "External API error; segment retrieval failed"
          }
        }
      },
      "put" : {
        "tags" : [ "segments" ],
        "summary" : "Make changes or updates to an existing segment",
        "description" : "The following fields can be modified through this endpoint: <br><b>name, description, definition, owner, rsid, aamStatus</b><br><br>Note: \"aamStatus\" is used to \"publish\" a report suite segment to other products in the Marketing Cloud. Description is always required when publishing with aamStatus. The report suite must already be pre-configured for AAM for publishing to succeed (see the \"/segments/aamStatus/\" endpoint for more information). <br>Format for aamStatus object:<br>\"aamStatus\":{\"published\":[\"rsid1\",\"rsid2\"]}<br><br>Example \"defintion\" for use in testing API below (\"Page exists\"):<br>\"definition\":{\"func\":\"segment\",\"container\":{\"func\":\"container\",\"context\":\"hits\",\"pred\":{\"func\":\"exists\",\"description\":\"Page\",\"val\":{\"func\":\"attr\",\"name\":\"variables/page\"}}},\"version\":[1,0,0]}<br><br>Response will be the newly modified segment object after the update request completes.<br><br><b><span style=\"text-decoration: underline;\">SegmentResponse</span></b><br>A segment response will always include these default items:<br><b>id, name, description, rsid, owner</b><br>Other attributes can be optionally requested through the 'expansion' field as defined/documented in the GET endpoints (see GET \"/segments\" or GET \"/segments/{id}\" for more documentation).",
        "operationId" : "updateSegment",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "expansion",
          "in" : "query",
          "description" : "Comma-delimited list of additional segment metadata fields to include on response.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "reportSuiteName", "siteTitle", "ownerFullName", "modified", "migratedIds", "isDeleted", "approved", "favorite", "shares", "tags", "sharesFullName", "usageSummary", "usageSummaryWithRelevancyScore", "dwInUse", "asiInUse", "aamStatus", "legacyId", "compatibility", "definition", "internal", "dataGroup", "virtualReportSuites" ]
          },
          "collectionFormat" : "csv"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Segment ID to be updated",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "JSON-formatted Object containing key/value pairs to be updated.",
          "required" : false,
          "schema" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          }
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "Locale",
          "required" : false,
          "type" : "string",
          "default" : "en_US"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AnalyticsSegmentResponseItem"
            }
          },
          "400" : {
            "description" : "Definition must be formatted as a JSON Object"
          },
          "401" : {
            "description" : "Company mismatch; segment ownership can only be transferred within the same organization"
          },
          "403" : {
            "description" : "User does not have permission to update this segment"
          },
          "500" : {
            "description" : "External API error; Segment update or retrieval failed"
          }
        }
      },
      "delete" : {
        "tags" : [ "segments" ],
        "summary" : "Delete a segment by ID",
        "description" : "",
        "operationId" : "deleteSegment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The segment ID to be deleted",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "Locale",
          "required" : false,
          "type" : "string",
          "default" : "en_US"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          },
          "500" : {
            "description" : "External API error; Segment delete failed"
          }
        }
      }
    },
    "/usergroups/custom" : {
      "get" : {
        "tags" : [ "usergroups" ],
        "summary" : "Returns a list of custom permission groups for the current user's login company (meeting the paging restriction)",
        "description" : "",
        "operationId" : "findAll",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "expansion",
          "in" : "query",
          "description" : "Comma-delimited list of additional fields to include on response.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "rsids", "loginIds", "tokens", "configuredRsids" ]
          },
          "collectionFormat" : "csv"
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "Filter list to only return groups for the specified loginId",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "rsid",
          "in" : "query",
          "description" : "Filter list by suite",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "includeBlockedReportSuites",
          "in" : "query",
          "description" : "Include blocked report suites (adds rsids expansion if not present)",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "groupIds",
          "in" : "query",
          "description" : "Filter list by groupId",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of results per page",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page number (base 0 - first page is \"0\")",
          "required" : false,
          "type" : "integer",
          "default" : 0
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/UserGroup"
              }
            }
          },
          "500" : {
            "description" : "Error while retrieving user group list"
          }
        }
      },
      "put" : {
        "tags" : [ "usergroups" ],
        "summary" : "Updates linking of usergroups and suites",
        "description" : "",
        "operationId" : "updateGroups",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "expansion",
          "in" : "query",
          "description" : "Comma-delimited list of additional fields to include on response.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "rsids", "loginIds", "tokens", "configuredRsids" ]
          },
          "collectionFormat" : "csv"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Usergroups to link with suites",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/UserGroup"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/UserGroup"
              }
            }
          },
          "400" : {
            "description" : "Must specify at least one group to update"
          },
          "500" : {
            "description" : "Error while retrieving user group list"
          }
        }
      }
    },
    "/usergroups/custom/me" : {
      "get" : {
        "tags" : [ "usergroups" ],
        "summary" : "Returns a list of custom permission groups that the current user belongs to (meeting the paging restriction)",
        "description" : "",
        "operationId" : "findAllForCurrentUser",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "expansion",
          "in" : "query",
          "description" : "Comma-delimited list of additional fields to include on response.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "rsids", "loginIds", "tokens", "configuredRsids" ]
          },
          "collectionFormat" : "csv"
        }, {
          "name" : "rsid",
          "in" : "query",
          "description" : "Filter list by suite",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "includeBlockedReportSuites",
          "in" : "query",
          "description" : "Include blocked report suites (adds rsids expansion if not present)",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of results per page",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page number (base 0 - first page is \"0\")",
          "required" : false,
          "type" : "integer",
          "default" : 0
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/UserGroup"
              }
            }
          },
          "500" : {
            "description" : "Error while retrieving user group list"
          }
        }
      }
    },
    "/usergroups/permissions/analytics" : {
      "get" : {
        "tags" : [ "usergroups" ],
        "summary" : "Returns a group with its current permissions, and available permissions",
        "description" : "",
        "operationId" : "getAnalyticsGroup",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "locale",
          "in" : "query",
          "description" : "Locale",
          "required" : false,
          "type" : "string",
          "default" : "en_US"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Group"
            }
          },
          "500" : {
            "description" : "Error while retrieving group"
          }
        }
      }
    },
    "/usergroups/permissions/analytics/{groupId}" : {
      "get" : {
        "tags" : [ "usergroups" ],
        "summary" : "Returns a group with its current permissions, and available permissions",
        "description" : "",
        "operationId" : "getAnalyticsGroup",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "groupId",
          "in" : "path",
          "description" : "The group id for which to retrieve information",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "Locale",
          "required" : false,
          "type" : "string",
          "default" : "en_US"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Group"
            }
          },
          "500" : {
            "description" : "Error while retrieving group"
          }
        }
      },
      "put" : {
        "tags" : [ "usergroups" ],
        "summary" : "patches a group with updates",
        "description" : "",
        "operationId" : "updateAnalyticsGroup",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "groupId",
          "in" : "path",
          "description" : "The group id for which to update",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "Locale",
          "required" : false,
          "type" : "string",
          "default" : "en_US"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Group"
            }
          },
          "500" : {
            "description" : "Error while patching group"
          }
        }
      },
      "patch" : {
        "tags" : [ "usergroups" ],
        "summary" : "patches a group with updates",
        "description" : "",
        "operationId" : "patchAnalyticsGroup",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "groupId",
          "in" : "path",
          "description" : "The group id for which to update",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Group"
            }
          },
          "500" : {
            "description" : "Error while patching group"
          }
        }
      }
    },
    "/usergroups/permissions/marketingcloud/{imsPlcId}" : {
      "get" : {
        "tags" : [ "usergroups" ],
        "summary" : "Returns a group with its current permissions, and available permissions",
        "description" : "",
        "operationId" : "getGroup",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "imsPlcId",
          "in" : "path",
          "description" : "The plc id for which to retrieve information",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "Locale",
          "required" : false,
          "type" : "string",
          "default" : "en_US"
        }, {
          "name" : "companyName",
          "in" : "query",
          "description" : "the company name. Needed if using a service token",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Group"
            }
          },
          "500" : {
            "description" : "Error while retrieving group"
          }
        }
      },
      "put" : {
        "tags" : [ "usergroups" ],
        "summary" : "patches a group with updates",
        "description" : "",
        "operationId" : "updateMarketingCloudGroup",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "imsPlcId",
          "in" : "path",
          "description" : "The plc id for which to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "companyName",
          "in" : "query",
          "description" : "the company name. Needed if using a service token",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "email",
          "in" : "query",
          "description" : "the ims login (email) of the calling user",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "imsUserId",
          "in" : "query",
          "description" : "the ims user id of the calling user",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "locale",
          "in" : "query",
          "description" : "Locale",
          "required" : false,
          "type" : "string",
          "default" : "en_US"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Group"
            }
          },
          "500" : {
            "description" : "Error while patching group"
          }
        }
      },
      "delete" : {
        "tags" : [ "usergroups" ],
        "summary" : "Delete a group by imsPlcId",
        "description" : "",
        "operationId" : "delete",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "imsPlcId",
          "in" : "path",
          "description" : "The group id for which to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "companyName",
          "in" : "query",
          "description" : "the company name. Needed if using a service token",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "email",
          "in" : "query",
          "description" : "the ims login (email) of the calling user",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "imsUserId",
          "in" : "query",
          "description" : "the ims user id of the calling user",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DeleteResponse"
            }
          },
          "500" : {
            "description" : "Error while retrieving group"
          }
        }
      },
      "patch" : {
        "tags" : [ "usergroups" ],
        "summary" : "patches a group with updates",
        "description" : "",
        "operationId" : "patchGroup",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "imsPlcId",
          "in" : "path",
          "description" : "The plc id for which to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "companyName",
          "in" : "query",
          "description" : "the company name. Needed if using a service token",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "email",
          "in" : "query",
          "description" : "the ims login (email) of the calling user",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "imsUserId",
          "in" : "query",
          "description" : "the ims user id of the calling user",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Group"
            }
          },
          "500" : {
            "description" : "Error while patching group"
          }
        }
      }
    },
    "/users" : {
      "get" : {
        "tags" : [ "users" ],
        "summary" : "Returns a list of users for the current user's login company",
        "description" : "Retrieves a list of all users for the company designated by the auth token.",
        "operationId" : "findAll",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "imsUserIds",
          "in" : "query",
          "description" : "Comma-delimited list of IMS User IDs to filter by",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "expansion",
          "in" : "query",
          "description" : "Comma-delimited list of additional analytics user metadata fields to include on response.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "admin", "imsOrgId", "marketingCloudOnly", "mcUserMigration" ]
          },
          "collectionFormat" : "csv"
        }, {
          "name" : "addAdminExpansion",
          "in" : "query",
          "description" : "Right now we default to including the admin expansion. Set this flag to false to not include the admin expansion by default.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of results per page",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page number (base 0 - first page is \"0\")",
          "required" : false,
          "type" : "integer",
          "default" : 0
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/AnalyticsUser"
              }
            }
          },
          "500" : {
            "description" : "Database error or other unexpected error"
          }
        }
      }
    },
    "/users/me" : {
      "get" : {
        "tags" : [ "users" ],
        "summary" : "Get the current user",
        "description" : "",
        "operationId" : "getCurrentUser",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "expansion",
          "in" : "query",
          "description" : "Comma-delimited list of additional analytics user metadata fields to include on response.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "admin", "imsOrgId", "marketingCloudOnly", "mcUserMigration", "tenantId" ]
          },
          "collectionFormat" : "csv"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AnalyticsUser"
            }
          }
        }
      }
    }
  },
  "definitions" : {
    "AnalyticsCalculatedMetric" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Id of the calculated metric."
        },
        "name" : {
          "type" : "string",
          "description" : "A name for the calculated metric."
        },
        "description" : {
          "type" : "string",
          "description" : "A description of the calculated metric."
        },
        "rsid" : {
          "type" : "string",
          "description" : "The report suite id."
        },
        "reportSuiteName" : {
          "type" : "string",
          "description" : "The friendly name for the report suite id."
        },
        "owner" : {
          "description" : "The owner of the calculated metric as an Owner object.",
          "$ref" : "#/definitions/Owner"
        },
        "isDeleted" : {
          "type" : "boolean",
          "description" : "Whether or not the calculated metric is 'Deleted' (deleted calculated metrics are only returned if requested by id)",
          "default" : false
        },
        "migratedIds" : {
          "type" : "array",
          "description" : "A list of ids that have been migrated from one data center to another. This is the id of the calculated metric in the old data center.  This is an array and can have multiple ids if the calculated metric has been migrated more than once.",
          "items" : {
            "type" : "string"
          }
        },
        "internal" : {
          "type" : "boolean",
          "description" : "Whether or not the calculated metric is internal. Internal means that the calculated metric is used by the product but not exposed to the customers",
          "default" : false
        },
        "polarity" : {
          "type" : "string",
          "enum" : [ "positive", "negative" ]
        },
        "precision" : {
          "type" : "integer",
          "format" : "int32"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "CURRENCY", "TIME", "DECIMAL", "PERCENT" ]
        },
        "definition" : {
          "description" : "The calculated metric definition as a CalculatedMetricDef object",
          "$ref" : "#/definitions/CalculatedMetricDef"
        },
        "compatibility" : {
          "description" : "Analytics products that the calculated metric is compatible with",
          "$ref" : "#/definitions/CalcMetricCompatibility"
        },
        "legacyId" : {
          "type" : "string",
          "description" : "Legacy calculated metric id from old calculated metric database (only exists if the calculated metric was migrated from the old calculated metric DB)"
        },
        "template" : {
          "type" : "boolean",
          "description" : "Whether or not the calculated metric is a template.  A template is a predefined calculated metric that can be used by all customers and can not be edited",
          "default" : false
        },
        "authorization" : {
          "$ref" : "#/definitions/CalculatedMetricAuthorization"
        },
        "dataGroup" : {
          "type" : "string",
          "description" : "The data group of the calculated metric"
        },
        "siteTitle" : {
          "type" : "string",
          "description" : "A name for the report suite.  This is deprecated and should use the report suite name instead."
        },
        "tags" : {
          "type" : "array",
          "description" : "All existing tags associated with the calculated metric.",
          "items" : {
            "$ref" : "#/definitions/Tag"
          }
        },
        "shares" : {
          "type" : "array",
          "description" : "Existing shares for the calculated metric.",
          "items" : {
            "$ref" : "#/definitions/Share"
          }
        },
        "approved" : {
          "type" : "boolean",
          "description" : "Whether or not the calculated metric has been marked approved.",
          "default" : false
        },
        "favorite" : {
          "type" : "boolean",
          "description" : "Whether or not the calculated metric has been marked as a favorite.",
          "default" : false
        },
        "usageSummary" : {
          "description" : "How frequently the user uses this calculated metric.",
          "$ref" : "#/definitions/SummarizedUsageItem"
        },
        "modified" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "AnalyticsDimension" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "title" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "STRING", "INT", "DECIMAL", "CURRENCY", "PERCENT", "TIME", "ENUM", "ORDERED_ENUM" ]
        },
        "category" : {
          "type" : "string"
        },
        "support" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "pathable" : {
          "type" : "boolean",
          "default" : false
        },
        "parent" : {
          "type" : "string"
        },
        "extraTitleInfo" : {
          "type" : "string"
        },
        "segmentable" : {
          "type" : "boolean",
          "default" : false
        },
        "reportable" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "description" : {
          "type" : "string"
        },
        "fragRelId" : {
          "type" : "string"
        },
        "dataGroup" : {
          "type" : "string"
        },
        "hidden" : {
          "type" : "boolean",
          "default" : false
        },
        "noAccess" : {
          "type" : "boolean",
          "default" : false
        },
        "contentAwareDefault" : {
          "type" : "boolean",
          "default" : false
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Tag"
          }
        },
        "shares" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Share"
          }
        },
        "approved" : {
          "type" : "boolean",
          "default" : false
        },
        "favorite" : {
          "type" : "boolean",
          "default" : false
        },
        "usageSummary" : {
          "$ref" : "#/definitions/SummarizedUsageItem"
        }
      }
    },
    "AnalyticsMetric" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "title" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "STRING", "INT", "DECIMAL", "CURRENCY", "PERCENT", "TIME", "ENUM", "ORDERED_ENUM" ]
        },
        "category" : {
          "type" : "string"
        },
        "support" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "allocation" : {
          "type" : "boolean",
          "default" : false
        },
        "precision" : {
          "type" : "integer",
          "format" : "int32"
        },
        "calculated" : {
          "type" : "boolean",
          "default" : false
        },
        "segmentable" : {
          "type" : "boolean",
          "default" : false
        },
        "description" : {
          "type" : "string"
        },
        "polarity" : {
          "type" : "string",
          "enum" : [ "positive", "negative" ]
        },
        "visibility" : {
          "type" : "string",
          "enum" : [ "visibleEverywhere", "builderOnly", "hiddenEverywhere" ]
        },
        "dataGroup" : {
          "type" : "string"
        },
        "hidden" : {
          "type" : "boolean",
          "default" : false
        },
        "noAccess" : {
          "type" : "boolean",
          "default" : false
        },
        "metricViews" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AnalyticsMetricView"
          }
        },
        "contentAwareDefault" : {
          "type" : "boolean",
          "default" : false
        },
        "helpLink" : {
          "type" : "string"
        },
        "warning" : {
          "$ref" : "#/definitions/MetricsWarning"
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Tag"
          }
        },
        "shares" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Share"
          }
        },
        "approved" : {
          "type" : "boolean",
          "default" : false
        },
        "favorite" : {
          "type" : "boolean",
          "default" : false
        },
        "usageSummary" : {
          "$ref" : "#/definitions/SummarizedUsageItem"
        }
      }
    },
    "AnalyticsMetricView" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "AnalyticsSegmentResponseItem" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Id of the segment."
        },
        "name" : {
          "type" : "string",
          "description" : "A name for the segment."
        },
        "description" : {
          "type" : "string",
          "description" : "A description of the segment."
        },
        "rsid" : {
          "type" : "string",
          "description" : "The report suite id."
        },
        "reportSuiteName" : {
          "type" : "string",
          "description" : "The friendly name for the report suite id."
        },
        "owner" : {
          "description" : "The owner of the segment as an Owner object.",
          "$ref" : "#/definitions/Owner"
        },
        "isDeleted" : {
          "type" : "boolean",
          "description" : "Whether or not the segment is 'Deleted' (deleted segments are only returned if requested by id)",
          "default" : false
        },
        "migratedIds" : {
          "type" : "array",
          "description" : "A list of ids that have been migrated from one data center to another. This is the id of the segment in the old data center.  This is an array and can have multiple ids if the segment has been migrated more than once.",
          "items" : {
            "type" : "string"
          }
        },
        "internal" : {
          "type" : "boolean",
          "description" : "Whether or not the segment is internal. Internal means that the segment is used by the product but not exposed to the customers",
          "default" : false
        },
        "dwInUse" : {
          "type" : "boolean",
          "description" : "Whether or not the segment currently in use in a Data Warehouse request. A Data Warehouse request is another type of report that clients can run based on their raw data",
          "default" : false
        },
        "asiInUse" : {
          "type" : "boolean",
          "description" : "Whether or not the segment currently in use in an ASI (old version of VSR) slot.",
          "default" : false
        },
        "aamStatus" : {
          "type" : "object",
          "description" : "AAM/Raven publishing status (cross-product segment sharing). A segment can be published to AAM, and this flag indicates whether the segment has been published to AAM.",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "definition" : {
          "type" : "object",
          "description" : "The segment definition as a JSON object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "compatibility" : {
          "type" : "object",
          "description" : "Analytics products that the segment is compatible with",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "legacyId" : {
          "type" : "string",
          "description" : "Legacy segment id from old segment database (only exists if the segment was migrated from the old segment DB)"
        },
        "template" : {
          "type" : "boolean",
          "description" : "Whether or not the segment is a template.  A template is a predefined segment that can be used by all customers and can not be edited",
          "default" : false
        },
        "dataGroup" : {
          "type" : "string",
          "description" : "The data group of the segment"
        },
        "virtualReportSuites" : {
          "type" : "array",
          "description" : "A list of all Virtual Report Suites that are using this segment.",
          "items" : {
            "$ref" : "#/definitions/VirtualReportSuite"
          }
        },
        "siteTitle" : {
          "type" : "string",
          "description" : "A name for the report suite.  This is deprecated and should use the report suite name instead."
        },
        "tags" : {
          "type" : "array",
          "description" : "All existing tags associated with the segment.",
          "items" : {
            "$ref" : "#/definitions/Tag"
          }
        },
        "shares" : {
          "type" : "array",
          "description" : "Existing shares for the segment.",
          "items" : {
            "$ref" : "#/definitions/Share"
          }
        },
        "approved" : {
          "type" : "boolean",
          "description" : "Whether or not the segment has been marked approved.",
          "default" : false
        },
        "favorite" : {
          "type" : "boolean",
          "description" : "Whether or not the segment has been marked as a favorite.",
          "default" : false
        },
        "usageSummary" : {
          "description" : "How frequently the user uses this segment.",
          "$ref" : "#/definitions/SummarizedUsageItem"
        },
        "modified" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "AnalyticsUser" : {
      "type" : "object",
      "properties" : {
        "companyid" : {
          "type" : "integer",
          "format" : "int32"
        },
        "loginId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "login" : {
          "type" : "string"
        },
        "admin" : {
          "type" : "boolean",
          "default" : false
        },
        "marketingCloudOnly" : {
          "type" : "boolean",
          "default" : false
        },
        "apiKey" : {
          "type" : "string"
        },
        "changePassword" : {
          "type" : "boolean",
          "default" : false
        },
        "createDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "disabled" : {
          "type" : "boolean",
          "default" : false
        },
        "adobeStatus" : {
          "type" : "string",
          "enum" : [ "NON_ADOBE", "ADOBE_ACTIVE", "ADOBE_INACTIVE" ]
        },
        "email" : {
          "type" : "string"
        },
        "firstName" : {
          "type" : "string"
        },
        "fullName" : {
          "type" : "string"
        },
        "imsUserId" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "lastLogin" : {
          "type" : "string",
          "format" : "date-time"
        },
        "legacyApiKey" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        },
        "passwordHash" : {
          "type" : "string"
        },
        "phoneNumber" : {
          "type" : "string"
        },
        "tempLoginEnd" : {
          "type" : "string",
          "format" : "date-time"
        },
        "title" : {
          "type" : "string"
        },
        "numberLocalization" : {
          "$ref" : "#/definitions/NumberLocalization"
        },
        "preferredNumberLocale" : {
          "type" : "string"
        },
        "imsOrgId" : {
          "type" : "string"
        },
        "migrationStatus" : {
          "type" : "string"
        },
        "migrationReason" : {
          "type" : "string"
        },
        "tenantId" : {
          "type" : "string"
        }
      }
    },
    "BatchMcEstimatedClusters" : {
      "type" : "object",
      "properties" : {
        "coopEnabled" : {
          "type" : "boolean",
          "default" : false
        },
        "rsid" : {
          "type" : "string"
        },
        "status" : {
          "$ref" : "#/definitions/BatchOperationStatus"
        },
        "mcAssociation" : {
          "$ref" : "#/definitions/McAssociation"
        },
        "estimatedPeople" : {
          "$ref" : "#/definitions/McClusterConfiguration"
        }
      }
    },
    "BatchOperationStatus" : {
      "type" : "object",
      "properties" : {
        "success" : {
          "type" : "boolean",
          "default" : false
        },
        "error" : {
          "$ref" : "#/definitions/ServiceErrorStatus"
        }
      }
    },
    "BulkMigrationObject" : {
      "type" : "object",
      "properties" : {
        "company" : {
          "type" : "integer",
          "format" : "int32"
        },
        "user" : {
          "type" : "integer",
          "format" : "int32"
        },
        "tag" : {
          "type" : "string"
        },
        "globalToRsid" : {
          "type" : "string"
        },
        "shared" : {
          "type" : "string"
        },
        "calc_metrics" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AnalyticsCalculatedMetric"
          }
        }
      }
    },
    "CalcMetricCompatibility" : {
      "type" : "object",
      "properties" : {
        "valid" : {
          "type" : "boolean",
          "default" : false
        },
        "message" : {
          "type" : "string"
        },
        "identityMetrics" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IdentityMetric"
          }
        },
        "segments" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "functions" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "validator_version" : {
          "type" : "string"
        },
        "supported_products" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "supported_schema" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "CalcMetricFunction" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "category" : {
          "type" : "string"
        },
        "persistable" : {
          "type" : "boolean",
          "default" : false
        },
        "name" : {
          "type" : "string"
        },
        "namespace" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "exampleKey" : {
          "type" : "string"
        },
        "example" : {
          "type" : "string"
        },
        "definition" : {
          "$ref" : "#/definitions/CalcMetricFunctionDef"
        }
      }
    },
    "CalcMetricFunctionDef" : {
      "type" : "object",
      "properties" : {
        "func" : {
          "type" : "string"
        },
        "parameters" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CalcMetricFunctionParameter"
          }
        },
        "formula" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "version" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      }
    },
    "CalcMetricFunctionParameter" : {
      "type" : "object",
      "properties" : {
        "func" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "friendlyNameKey" : {
          "type" : "string"
        },
        "descKey" : {
          "type" : "string"
        },
        "friendlyName" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "default-value" : {
          "type" : "object"
        }
      }
    },
    "CalculatedMetricAuthorization" : {
      "type" : "object",
      "properties" : {
        "authorized" : {
          "type" : "boolean",
          "default" : false
        },
        "unAuthorizedMetricIdentities" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "CalculatedMetricDef" : {
      "type" : "object",
      "properties" : {
        "formula" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "func" : {
          "type" : "string"
        },
        "version" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "filters" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          }
        }
      }
    },
    "CalendarType" : {
      "type" : "object",
      "properties" : {
        "rsid" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "gregorian", "nrf", "qrs", "custom_454", "custom_445", "modified_gregorian" ]
        },
        "anchorDate" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "Column" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string",
          "enum" : [ "DIMENSION", "METRIC" ]
        },
        "id" : {
          "type" : "string"
        },
        "title" : {
          "type" : "string"
        },
        "segmentIds" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "DeleteResponse" : {
      "type" : "object",
      "properties" : {
        "result" : {
          "type" : "string"
        }
      }
    },
    "DimensionItem" : {
      "type" : "object",
      "properties" : {
        "dimension" : {
          "type" : "string"
        },
        "itemId" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "Group" : {
      "type" : "object",
      "properties" : {
        "layout" : {
          "type" : "string"
        },
        "sections" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/GroupSectionHolder"
          }
        }
      }
    },
    "GroupSection" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "removable" : {
          "type" : "boolean",
          "default" : false
        },
        "allSelected" : {
          "type" : "boolean",
          "default" : false
        },
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/GroupSectionItem"
          }
        }
      }
    },
    "GroupSectionHolder" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/GroupSection"
          }
        }
      }
    },
    "GroupSectionItem" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "values" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/GroupSectionItemValue"
          }
        }
      }
    },
    "GroupSectionItemValue" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "included" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "IdentityMetric" : {
      "type" : "object",
      "properties" : {
        "identity" : {
          "type" : "string"
        },
        "dimensionView" : {
          "type" : "string",
          "enum" : [ "LINEAR_ALLOCATION", "PARTICIPATION_ALLOCATION", "LAST_TOUCH_ALLOCATION", "MC_FIRST_TOUCH_ALLOCATION", "MC_LAST_TOUCH_ALLOCATION" ]
        }
      }
    },
    "ImsOrgIdsFromRelatedCompanies" : {
      "type" : "object",
      "properties" : {
        "owningImsOrgId" : {
          "type" : "string"
        },
        "relatedImsOrgIds" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "JSONObject" : {
      "type" : "object"
    },
    "JsonNode" : {
      "type" : "object",
      "properties" : {
        "array" : {
          "type" : "boolean",
          "default" : false
        },
        "null" : {
          "type" : "boolean",
          "default" : false
        },
        "binary" : {
          "type" : "boolean",
          "default" : false
        },
        "number" : {
          "type" : "boolean",
          "default" : false
        },
        "float" : {
          "type" : "boolean",
          "default" : false
        },
        "int" : {
          "type" : "boolean",
          "default" : false
        },
        "nodeType" : {
          "type" : "string",
          "enum" : [ "ARRAY", "BINARY", "BOOLEAN", "MISSING", "NULL", "NUMBER", "OBJECT", "POJO", "STRING" ]
        },
        "object" : {
          "type" : "boolean",
          "default" : false
        },
        "long" : {
          "type" : "boolean",
          "default" : false
        },
        "short" : {
          "type" : "boolean",
          "default" : false
        },
        "double" : {
          "type" : "boolean",
          "default" : false
        },
        "pojo" : {
          "type" : "boolean",
          "default" : false
        },
        "valueNode" : {
          "type" : "boolean",
          "default" : false
        },
        "containerNode" : {
          "type" : "boolean",
          "default" : false
        },
        "missingNode" : {
          "type" : "boolean",
          "default" : false
        },
        "integralNumber" : {
          "type" : "boolean",
          "default" : false
        },
        "floatingPointNumber" : {
          "type" : "boolean",
          "default" : false
        },
        "bigDecimal" : {
          "type" : "boolean",
          "default" : false
        },
        "bigInteger" : {
          "type" : "boolean",
          "default" : false
        },
        "textual" : {
          "type" : "boolean",
          "default" : false
        },
        "boolean" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "Level" : {
      "type" : "object",
      "properties" : {
        "levelInt" : {
          "type" : "integer",
          "format" : "int32"
        },
        "levelStr" : {
          "type" : "string"
        }
      }
    },
    "Locale" : {
      "type" : "object",
      "properties" : {
        "language" : {
          "type" : "string"
        },
        "script" : {
          "type" : "string"
        },
        "country" : {
          "type" : "string"
        },
        "variant" : {
          "type" : "string"
        },
        "extensionKeys" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "unicodeLocaleAttributes" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "unicodeLocaleKeys" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "iso3Language" : {
          "type" : "string"
        },
        "iso3Country" : {
          "type" : "string"
        },
        "displayLanguage" : {
          "type" : "string"
        },
        "displayScript" : {
          "type" : "string"
        },
        "displayCountry" : {
          "type" : "string"
        },
        "displayVariant" : {
          "type" : "string"
        },
        "displayName" : {
          "type" : "string"
        }
      }
    },
    "McAssociation" : {
      "type" : "object",
      "properties" : {
        "rsid" : {
          "type" : "string"
        },
        "partnerId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "dataSourceId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "createUser" : {
          "type" : "string"
        },
        "createTimestamp" : {
          "type" : "string",
          "format" : "date-time"
        },
        "imsOrgId" : {
          "type" : "string"
        }
      }
    },
    "McAttributionConfig" : {
      "type" : "object",
      "properties" : {
        "rsid" : {
          "type" : "string"
        },
        "defaultMetric" : {
          "type" : "string"
        },
        "defaultDimension" : {
          "type" : "string"
        },
        "variables" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/McAttributionVariable"
          }
        }
      }
    },
    "McAttributionVariable" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "STANDARD", "EVAR", "EVENT", "PROP", "CLASSIFICATION", "LISTVAR", "REVAR", "RPROP", "REVENT", "RLISTVAR", "HIERARCHY", "VISATTR_STRING", "VISATTR_NUMERIC" ]
        },
        "parent" : {
          "type" : "string"
        }
      }
    },
    "McAudiences" : {
      "type" : "object",
      "properties" : {
        "mcAssociations" : {
          "$ref" : "#/definitions/McAssociation"
        },
        "enabled" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "McClusterConfiguration" : {
      "type" : "object",
      "properties" : {
        "dataSourceId" : {
          "type" : "string",
          "description" : "the dpid"
        }
      }
    },
    "McEstimatedClusters" : {
      "type" : "object",
      "properties" : {
        "coopEnabled" : {
          "type" : "boolean",
          "default" : false
        },
        "rsid" : {
          "type" : "string"
        },
        "mcAssociation" : {
          "$ref" : "#/definitions/McAssociation"
        },
        "estimatedPeople" : {
          "$ref" : "#/definitions/McClusterConfiguration"
        }
      }
    },
    "MetricsWarning" : {
      "type" : "object",
      "properties" : {
        "title" : {
          "type" : "string"
        },
        "text" : {
          "type" : "string"
        },
        "helpLink" : {
          "type" : "string"
        }
      }
    },
    "NumberLocalization" : {
      "type" : "object",
      "properties" : {
        "thousandsSeparator" : {
          "type" : "string"
        },
        "decimalSeparator" : {
          "type" : "string"
        }
      }
    },
    "Owner" : {
      "type" : "object",
      "required" : [ "id" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "the login id of the owner"
        },
        "name" : {
          "type" : "string",
          "position" : 1,
          "description" : "the friendly full login name of the owner, included when the expansion parameter ownerFullName is true"
        },
        "login" : {
          "type" : "string",
          "position" : 1,
          "description" : "the friendly full login name of the owner, included when the expansion parameter ownerFullName is true"
        }
      }
    },
    "PredictiveSettings" : {
      "type" : "object",
      "properties" : {
        "trainingPeriods" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "Project" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "rsid" : {
          "type" : "string"
        },
        "reportSuiteName" : {
          "type" : "string"
        },
        "owner" : {
          "$ref" : "#/definitions/Owner"
        },
        "isDeleted" : {
          "type" : "boolean",
          "default" : false
        },
        "migratedIds" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "internal" : {
          "type" : "boolean",
          "default" : false
        },
        "template" : {
          "type" : "boolean",
          "default" : false
        },
        "type" : {
          "type" : "string",
          "enum" : [ "project", "guided" ]
        },
        "definition" : {
          "$ref" : "#/definitions/JsonNode"
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Tag"
          }
        },
        "shares" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Share"
          }
        },
        "approved" : {
          "type" : "boolean",
          "default" : false
        },
        "favorite" : {
          "type" : "boolean",
          "default" : false
        },
        "usageSummary" : {
          "$ref" : "#/definitions/SummarizedUsageItem"
        },
        "siteTitle" : {
          "type" : "string"
        },
        "modified" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "ProjectCompatibility" : {
      "type" : "object",
      "properties" : {
        "valid" : {
          "type" : "boolean",
          "default" : false
        },
        "validatorVersion" : {
          "type" : "string"
        },
        "message" : {
          "type" : "string"
        }
      }
    },
    "RankedColumnError" : {
      "type" : "object",
      "properties" : {
        "columnId" : {
          "type" : "string"
        },
        "errorId" : {
          "type" : "string",
          "enum" : [ "unauthorized_metric", "unauthorized_dimension", "unauthorized_dimension_global", "anomaly_detection_failure_unexpected_item_count", "anomaly_detection_failure_tsa_service" ]
        },
        "errorDescription" : {
          "type" : "string"
        }
      }
    },
    "RankedColumnMetaData" : {
      "type" : "object",
      "properties" : {
        "dimension" : {
          "$ref" : "#/definitions/ReportDimension"
        },
        "columnIds" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "columnErrors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RankedColumnError"
          }
        }
      }
    },
    "RankedReportData" : {
      "type" : "object",
      "properties" : {
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "firstPage" : {
          "type" : "boolean",
          "default" : false
        },
        "lastPage" : {
          "type" : "boolean",
          "default" : false
        },
        "numberOfElements" : {
          "type" : "integer",
          "format" : "int32"
        },
        "number" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "type" : "string"
        },
        "request" : {
          "$ref" : "#/definitions/RankedRequest"
        },
        "reportId" : {
          "type" : "string"
        },
        "columns" : {
          "$ref" : "#/definitions/RankedColumnMetaData"
        },
        "rows" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Row"
          }
        },
        "summaryData" : {
          "$ref" : "#/definitions/RankedSummaryData"
        },
        "oberonRequestXML" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "oberonResponseXML" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "predictiveRequestObjects" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "predictiveResponseObjects" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "RankedRequest" : {
      "type" : "object",
      "properties" : {
        "rsid" : {
          "type" : "string"
        },
        "dimension" : {
          "type" : "string"
        },
        "locale" : {
          "$ref" : "#/definitions/Locale"
        },
        "globalFilters" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ReportFilter"
          }
        },
        "search" : {
          "$ref" : "#/definitions/ReportSearch"
        },
        "settings" : {
          "$ref" : "#/definitions/RankedSettings"
        },
        "statistics" : {
          "$ref" : "#/definitions/RankedStatistics"
        },
        "metricContainer" : {
          "$ref" : "#/definitions/ReportMetrics"
        },
        "globalPredictiveSettings" : {
          "$ref" : "#/definitions/PredictiveSettings"
        },
        "anchorDate" : {
          "type" : "string"
        }
      }
    },
    "RankedSettings" : {
      "type" : "object",
      "properties" : {
        "limit" : {
          "type" : "integer",
          "format" : "int32"
        },
        "page" : {
          "type" : "integer",
          "format" : "int32"
        },
        "dimensionSort" : {
          "type" : "string"
        },
        "countRepeatInstances" : {
          "type" : "boolean",
          "default" : false
        },
        "dataSourceTypes" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "reflectRequest" : {
          "type" : "boolean",
          "default" : false
        },
        "suiteReportingContext" : {
          "type" : "string",
          "enum" : [ "DEVICE", "TROMMEL_COMBINED" ]
        },
        "includeAnomalyDetection" : {
          "type" : "boolean",
          "default" : false
        },
        "includePercentChange" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "RankedStatistics" : {
      "type" : "object",
      "properties" : {
        "functions" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "ignoreZeroes" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "RankedSummaryData" : {
      "type" : "object",
      "properties" : {
        "summaryData" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "double"
            }
          }
        }
      }
    },
    "RelatedCompany" : {
      "type" : "object",
      "properties" : {
        "companyId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "name" : {
          "type" : "string"
        }
      }
    },
    "ReportDimension" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "STRING", "INT", "DECIMAL", "CURRENCY", "PERCENT", "TIME", "ENUM", "ORDERED_ENUM" ]
        }
      }
    },
    "ReportFilter" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "DATE_RANGE", "BREAKDOWN", "SEGMENT", "EXCLUDE_ITEM_IDS" ]
        },
        "dimension" : {
          "type" : "string"
        },
        "itemId" : {
          "type" : "string"
        },
        "segmentId" : {
          "type" : "string"
        },
        "segmentDefinition" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "dateRange" : {
          "type" : "string"
        },
        "excludeItemIds" : {
          "type" : "array",
          "items" : {
            "type" : "integer"
          }
        }
      }
    },
    "ReportMetric" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "columnId" : {
          "type" : "string"
        },
        "allocationType" : {
          "type" : "string"
        },
        "filters" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "sort" : {
          "type" : "string"
        },
        "metricDefinition" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "metricView" : {
          "type" : "string"
        },
        "predictive" : {
          "$ref" : "#/definitions/ReportMetricPredictiveSettings"
        }
      }
    },
    "ReportMetricPredictiveSettings" : {
      "type" : "object",
      "properties" : {
        "anomalyConfidence" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "ReportMetrics" : {
      "type" : "object",
      "properties" : {
        "metricFilters" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ReportFilter"
          }
        },
        "metrics" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ReportMetric"
          }
        }
      }
    },
    "ReportSearch" : {
      "type" : "object",
      "properties" : {
        "clause" : {
          "type" : "string"
        },
        "excludeItemIds" : {
          "type" : "array",
          "items" : {
            "type" : "integer"
          }
        },
        "itemIds" : {
          "type" : "array",
          "items" : {
            "type" : "integer"
          }
        },
        "includeSearchTotal" : {
          "type" : "boolean",
          "default" : false
        },
        "empty" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "ReportSuite" : {
      "type" : "object",
      "properties" : {
        "rsid" : {
          "type" : "string"
        },
        "reportSuiteName" : {
          "type" : "string"
        },
        "numericRsid" : {
          "type" : "integer",
          "format" : "int32"
        },
        "active" : {
          "type" : "boolean",
          "default" : false
        },
        "baseUrl" : {
          "type" : "string"
        },
        "defaultPage" : {
          "type" : "string"
        },
        "currency" : {
          "type" : "string"
        },
        "calendarAnchorDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "organization" : {
          "type" : "integer",
          "format" : "int32"
        },
        "companyId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "billingCustomerId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "timezone" : {
          "type" : "integer",
          "format" : "int32"
        },
        "timezoneZoneinfo" : {
          "type" : "string"
        },
        "signedUpDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "lastModified" : {
          "type" : "string",
          "format" : "date-time"
        },
        "signedUpOurTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "saveAamIdValues" : {
          "type" : "boolean",
          "default" : false
        },
        "references" : {
          "$ref" : "#/definitions/ReportSuiteHateoasReferences"
        },
        "calendarType" : {
          "$ref" : "#/definitions/CalendarType"
        },
        "axleConfig" : {
          "$ref" : "#/definitions/ReportSuiteAxleConfig"
        },
        "tntConfig" : {
          "$ref" : "#/definitions/TntConfig"
        },
        "ipObfuscationEnabled" : {
          "type" : "boolean",
          "default" : false
        },
        "type" : {
          "type" : "string"
        },
        "currentTimezoneOffset" : {
          "type" : "number",
          "format" : "float"
        },
        "numGroups" : {
          "type" : "integer",
          "format" : "int32"
        },
        "isBlocked" : {
          "type" : "boolean",
          "default" : false
        },
        "discoverUiEnabled" : {
          "type" : "boolean",
          "default" : false
        },
        "mcAssociation" : {
          "$ref" : "#/definitions/McAssociation"
        },
        "mcAudiences" : {
          "$ref" : "#/definitions/McAudiences"
        },
        "mcEstimatedClusters" : {
          "$ref" : "#/definitions/McEstimatedClusters"
        },
        "imsOrgIdsFromRelatedCompanies" : {
          "$ref" : "#/definitions/ImsOrgIdsFromRelatedCompanies"
        },
        "relatedCompanies" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/RelatedCompany"
          }
        },
        "dataCurrentAsOf" : {
          "type" : "string",
          "format" : "date-time"
        },
        "enabledSolutions" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "parentRsid" : {
          "type" : "string"
        },
        "isDeleted" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "ReportSuiteAxleConfig" : {
      "type" : "object",
      "properties" : {
        "axleData" : {
          "type" : "boolean",
          "default" : false
        },
        "axleStart" : {
          "type" : "string"
        }
      }
    },
    "ReportSuiteHateoasReferences" : {
      "type" : "object",
      "properties" : {
        "companyUrl" : {
          "type" : "string"
        },
        "billingCustomerUrl" : {
          "type" : "string"
        }
      }
    },
    "Response" : {
      "type" : "object",
      "properties" : {
        "entity" : {
          "type" : "object"
        },
        "status" : {
          "type" : "integer",
          "format" : "int32"
        },
        "metadata" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          }
        }
      }
    },
    "Row" : {
      "type" : "object",
      "properties" : {
        "itemId" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "number",
            "format" : "double"
          }
        },
        "dataExpected" : {
          "type" : "array",
          "items" : {
            "type" : "number",
            "format" : "double"
          }
        },
        "dataUpperBound" : {
          "type" : "array",
          "items" : {
            "type" : "number",
            "format" : "double"
          }
        },
        "dataLowerBound" : {
          "type" : "array",
          "items" : {
            "type" : "number",
            "format" : "double"
          }
        },
        "dataAnomalyDetected" : {
          "type" : "array",
          "items" : {
            "type" : "boolean"
          }
        },
        "percentChange" : {
          "type" : "array",
          "items" : {
            "type" : "number",
            "format" : "double"
          }
        }
      }
    },
    "RowItem" : {
      "type" : "object",
      "properties" : {
        "itemId" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "SegmentCompatibility" : {
      "type" : "object",
      "properties" : {
        "valid" : {
          "type" : "boolean",
          "default" : false
        },
        "message" : {
          "type" : "string"
        },
        "validator_version" : {
          "type" : "string"
        },
        "supported_products" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "supported_schema" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "supported_features" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "SegmentPublishingConfig" : {
      "type" : "object",
      "properties" : {
        "dataSourceId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "traitFolderId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "segmentFolderId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "aamAccessToken" : {
          "type" : "string"
        }
      }
    },
    "SegmentSummaryResponse" : {
      "type" : "object",
      "properties" : {
        "report" : {
          "$ref" : "#/definitions/TotalsReportData"
        },
        "compatibility" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "supportedEngines" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "detailMsg" : {
          "type" : "string"
        },
        "oberonRequestXml" : {
          "type" : "string"
        },
        "oberonResponseXml" : {
          "type" : "string"
        }
      }
    },
    "ServiceError" : {
      "type" : "object",
      "properties" : {
        "statusCode" : {
          "type" : "integer",
          "format" : "int32"
        },
        "logLevel" : {
          "$ref" : "#/definitions/Level"
        },
        "errorCode" : {
          "type" : "string"
        }
      }
    },
    "ServiceErrorStatus" : {
      "type" : "object",
      "properties" : {
        "errorCode" : {
          "type" : "string"
        },
        "errorDescription" : {
          "type" : "string"
        },
        "errorId" : {
          "type" : "string"
        }
      }
    },
    "ServiceException" : {
      "type" : "object",
      "properties" : {
        "cause" : {
          "$ref" : "#/definitions/Throwable"
        },
        "stackTrace" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/StackTraceElement"
          }
        },
        "response" : {
          "$ref" : "#/definitions/Response"
        },
        "error" : {
          "$ref" : "#/definitions/ServiceError"
        },
        "errorDescription" : {
          "type" : "string"
        },
        "message" : {
          "type" : "string"
        },
        "serviceErrorStatus" : {
          "$ref" : "#/definitions/ServiceErrorStatus"
        },
        "localizedMessage" : {
          "type" : "string"
        },
        "suppressed" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Throwable"
          }
        }
      }
    },
    "Share" : {
      "type" : "object",
      "required" : [ "componentId", "shareToId", "shareToType" ],
      "properties" : {
        "shareId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "shareToId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "shareToType" : {
          "type" : "string"
        },
        "componentType" : {
          "type" : "string"
        },
        "componentId" : {
          "type" : "string"
        },
        "shareToDisplayName" : {
          "type" : "string"
        },
        "shareToLogin" : {
          "type" : "string"
        }
      }
    },
    "StackTraceElement" : {
      "type" : "object",
      "properties" : {
        "methodName" : {
          "type" : "string"
        },
        "fileName" : {
          "type" : "string"
        },
        "lineNumber" : {
          "type" : "integer",
          "format" : "int32"
        },
        "className" : {
          "type" : "string"
        },
        "nativeMethod" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "SummarizedUsageItem" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "format" : "int32"
        },
        "mostRecentTimestamp" : {
          "type" : "string",
          "format" : "date-time"
        },
        "itemId" : {
          "type" : "string"
        },
        "relevancyScore" : {
          "type" : "number",
          "format" : "float"
        }
      }
    },
    "Tag" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "the tag id"
        },
        "name" : {
          "type" : "string",
          "description" : "the tag name "
        },
        "description" : {
          "type" : "string",
          "description" : "the tag description"
        },
        "components" : {
          "type" : "array",
          "description" : "the list of components that have been tagged with this tag",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/TaggedComponent"
          }
        }
      },
      "description" : "Tag Model"
    },
    "TaggedComponent" : {
      "type" : "object",
      "properties" : {
        "componentType" : {
          "type" : "string"
        },
        "componentId" : {
          "type" : "string"
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Tag"
          }
        }
      }
    },
    "Throwable" : {
      "type" : "object",
      "properties" : {
        "cause" : {
          "$ref" : "#/definitions/Throwable"
        },
        "stackTrace" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/StackTraceElement"
          }
        },
        "message" : {
          "type" : "string"
        },
        "localizedMessage" : {
          "type" : "string"
        },
        "suppressed" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Throwable"
          }
        }
      }
    },
    "TntConfig" : {
      "type" : "object",
      "properties" : {
        "tnt" : {
          "type" : "boolean",
          "default" : false
        },
        "tntExpireType" : {
          "type" : "integer",
          "format" : "int32"
        },
        "tntExpirePeriods" : {
          "type" : "integer",
          "format" : "int32"
        },
        "tntAllocationType" : {
          "type" : "integer",
          "format" : "int32"
        },
        "tntA4tDateEnabled" : {
          "type" : "boolean",
          "default" : false
        },
        "tntClientCode" : {
          "type" : "string"
        }
      }
    },
    "TotalsReportData" : {
      "type" : "object",
      "properties" : {
        "reportId" : {
          "type" : "string"
        },
        "columns" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Column"
          }
        },
        "totals" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RowItem"
          }
        },
        "message" : {
          "type" : "string"
        }
      }
    },
    "UnhashReportData" : {
      "type" : "object",
      "properties" : {
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "firstPage" : {
          "type" : "boolean",
          "default" : false
        },
        "lastPage" : {
          "type" : "boolean",
          "default" : false
        },
        "numberOfElements" : {
          "type" : "integer",
          "format" : "int32"
        },
        "number" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "type" : "string"
        },
        "reportId" : {
          "type" : "string"
        },
        "searchAnd" : {
          "type" : "string"
        },
        "searchOr" : {
          "type" : "string"
        },
        "searchNot" : {
          "type" : "string"
        },
        "searchPhrase" : {
          "type" : "string"
        },
        "rows" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RowItem"
          }
        },
        "oberonRequestXML" : {
          "type" : "string"
        },
        "oberonResponseXML" : {
          "type" : "string"
        }
      }
    },
    "UserGroup" : {
      "type" : "object",
      "properties" : {
        "companyid" : {
          "type" : "integer",
          "format" : "int32"
        },
        "groupId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "rsids" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "tokens" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "loginIds" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "imsPlcId" : {
          "type" : "string"
        }
      }
    },
    "VirtualReportSuite" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "rsid" : {
          "type" : "string"
        },
        "reportSuiteName" : {
          "type" : "string"
        },
        "owner" : {
          "$ref" : "#/definitions/Owner"
        },
        "isDeleted" : {
          "type" : "boolean",
          "default" : false
        },
        "migratedIds" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "internal" : {
          "type" : "boolean",
          "default" : false
        },
        "parentRsid" : {
          "type" : "string"
        },
        "parentRsidName" : {
          "type" : "string"
        },
        "timezone" : {
          "type" : "integer",
          "format" : "int32"
        },
        "segmentList" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "globalCompanyKey" : {
          "type" : "string"
        },
        "numGroups" : {
          "type" : "integer",
          "format" : "int32"
        },
        "groups" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/UserGroup"
          }
        },
        "currency" : {
          "type" : "string"
        },
        "calendarType" : {
          "$ref" : "#/definitions/CalendarType"
        },
        "axleConfig" : {
          "$ref" : "#/definitions/ReportSuiteAxleConfig"
        },
        "currentTimezoneOffset" : {
          "type" : "number",
          "format" : "float"
        },
        "timezoneZoneinfo" : {
          "type" : "string"
        },
        "dataCurrentAsOf" : {
          "type" : "string",
          "format" : "date-time"
        },
        "discoverUiEnabled" : {
          "type" : "boolean",
          "default" : false
        },
        "enabledSolutions" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "numericRsid" : {
          "type" : "integer",
          "format" : "int32"
        },
        "isBlocked" : {
          "type" : "boolean",
          "default" : false
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Tag"
          }
        },
        "shares" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Share"
          }
        },
        "approved" : {
          "type" : "boolean",
          "default" : false
        },
        "favorite" : {
          "type" : "boolean",
          "default" : false
        },
        "usageSummary" : {
          "$ref" : "#/definitions/SummarizedUsageItem"
        },
        "siteTitle" : {
          "type" : "string"
        },
        "modified" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    }
  }
}
